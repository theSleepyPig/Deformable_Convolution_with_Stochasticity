nohup: ignoring input
wandb: Currently logged in as: xuanzhu_07 (xuanzhu_07-university-of-sydney). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.18.7 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.16.3
wandb: Run data is saved locally in /home/yxma/hzx/hzx/hzx/rand_defence/wandb/run-20241120_161607-z5u3kgjv
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run misunderstood-frog-8
wandb: ‚≠êÔ∏è View project at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa
wandb: üöÄ View run at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa/runs/z5u3kgjv
[2024/11/20 16:16:11] - Namespace(batch_size=128, data_dir='~/datasets/CIFAR10/', dataset='cifar10', epochs=200, network='ResNet18', worker=4, lr_schedule='multistep', lr_min=0.0, lr_max=0.1, weight_decay=0.0005, momentum=0.9, none_random_training=True, rand_deform_training=False, randpos_deform_training=True, randpos_multi_deform_training=False, is_n_repeat=False, reNum=5, only_adv_randpos_training=False, rand_path_training=False, epsilon=8, alpha=2, c=0.0001, steps=1000, seed=0, attack_iters=20, restarts=1, save_dir='logs/ResNet18_DeformableConvolution', pretrain='/home/yxma/hzx/hzx/hzx/rand_defence/ckpt/cifar10/ResNet18/ckpt/model_20241119151231.pth', continue_training=False, lb=2048, pos=0, eot=False, hang=False, device=1)
[2024/11/20 16:16:11] - Dataset: cifar10
[2024/11/20 16:16:12] - Evaluating with standard images with random mask...
Process ID: 1239584
Pretrain model path: /home/yxma/hzx/hzx/hzx/rand_defence/ckpt/cifar10/ResNet18/ckpt/model_20241119151231.pth
Does pretrain model path exist? True
Files already downloaded and verified
Files already downloaded and verified
ResNetPartmask5(
  (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layer1): ModuleList(
    (0): RandonBasicBlock049(
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): MaskedConv2d(64, 64, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer11): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer2): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer3): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer4): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (linear): Linear(in_features=512, out_features=10, bias=True)
  (normalize): NormalizeByChannelMeanStd(mean=tensor([0.4914, 0.4822, 0.4465], device='cuda:1'), std=tensor([0.2471, 0.2435, 0.2616], device='cuda:1'))
)
Different keys:
normalize.mean
normalize.std
Nature:
[2024/11/20 16:16:13] - Evaluating with standard images with random mask...
tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        ...,


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]]], device='cuda:1')
[2024/11/20 16:16:13] - Evaluating with standard images with random mask...
[2024/11/20 16:16:14] - Evaluating with standard images with random mask...
[2024/11/20 16:16:14] - Evaluating with standard images with random mask...
[2024/11/20 16:16:15] - Nature Acc Mean: 0.8590, Std: 0.0005
AA attacking
[00:00<?,?it/s][00:22<29:10,22.44s/it][00:49<32:19,25.19s/it][01:25<37:53,29.91s/it][02:07<43:40,34.94s/it][02:57<49:42,40.30s/it][03:35<48:09,39.58s/it][04:11<45:56,38.28s/it][04:48<44:48,37.87s/it][05:23<43:14,37.07s/it][05:57<41:31,36.11s/it][06:32<40:34,35.80s/it][07:08<39:58,35.79s/it][07:43<39:00,35.47s/it][08:18<38:13,35.29s/it][08:53<37:43,35.37s/it][09:28<36:57,35.20s/it][10:04<36:36,35.43s/it][10:39<35:57,35.37s/it][11:13<34:59,35.00s/it][11:47<33:56,34.52s/it][12:22<33:32,34.70s/it][12:59<33:38,35.41s/it][13:36<33:38,36.05s/it][14:14<33:28,36.52s/it][14:51<32:57,36.62s/it][15:26<32:00,36.24s/it][16:03<31:37,36.49s/it][16:38<30:31,35.91s/it][17:15<30:08,36.17s/it][17:51<29:33,36.19s/it][18:27<29:02,36.30s/it][19:04<28:31,36.42s/it][19:43<28:23,37.03s/it][20:22<28:13,37.64s/it][20:59<27:33,37.57s/it][21:34<26:17,36.70s/it][22:08<25:15,36.09s/it][22:46<25:03,36.67s/it][23:23<24:31,36.78s/it][23:59<23:36,36.31s/it][24:34<22:50,36.06s/it][25:09<21:57,35.62s/it][25:45<21:27,35.77s/it][26:21<20:57,35.93s/it][26:58<20:26,36.06s/it][27:35<20:01,36.42s/it][28:13<19:38,36.84s/it][28:48<18:47,36.36s/it][29:26<18:27,36.92s/it][30:01<17:31,36.27s/it][30:34<16:29,35.34s/it][31:09<15:47,35.10s/it][31:42<15:00,34.63s/it][32:18<14:38,35.15s/it][32:54<14:03,35.14s/it][33:30<13:39,35.65s/it][34:07<13:09,35.87s/it][34:42<12:28,35.63s/it][35:16<11:46,35.32s/it][35:50<11:02,34.89s/it][36:27<10:38,35.48s/it][37:02<09:59,35.25s/it][37:39<09:32,35.77s/it][38:14<08:52,35.49s/it][38:53<08:32,36.58s/it][39:27<07:45,35.79s/it][40:00<07:01,35.15s/it][40:34<06:21,34.69s/it][41:09<05:46,34.65s/it][41:45<05:16,35.20s/it][42:20<04:41,35.20s/it][42:58<04:10,35.84s/it][43:34<03:36,36.06s/it][44:10<02:59,35.98s/it][44:46<02:24,36.03s/it][45:21<01:47,35.72s/it][45:56<01:10,35.34s/it][46:31<00:35,35.44s/it][47:04<00:00,34.62s/it][47:04<00:00,35.75s/it][2024/11/20 17:03:19] - autoattack - Run 79: Accuracy: 0.5857

[00:00<?,?it/s][00:36<47:43,36.71s/it][01:09<44:13,34.46s/it][01:44<43:55,34.67s/it][02:20<43:57,35.16s/it][02:56<43:35,35.35s/it][03:33<43:57,36.14s/it][04:10<43:29,36.25s/it][04:44<42:12,35.67s/it][05:21<41:53,35.90s/it][05:56<41:04,35.72s/it][06:33<41:07,36.28s/it][07:11<40:51,36.59s/it][07:46<39:45,36.14s/it][08:23<39:35,36.55s/it][09:01<39:29,37.03s/it][09:38<38:34,36.73s/it][10:13<37:37,36.42s/it][10:49<36:45,36.16s/it][11:25<36:17,36.29s/it][12:01<35:36,36.21s/it][12:37<34:50,36.04s/it][13:12<34:02,35.84s/it][13:48<33:26,35.84s/it][14:26<33:16,36.30s/it][15:04<33:05,36.78s/it][15:40<32:30,36.81s/it][16:18<32:04,37.02s/it][16:53<31:00,36.48s/it][17:29<30:15,36.31s/it][18:07<29:58,36.71s/it][18:46<30:04,37.59s/it][19:25<29:38,37.85s/it][20:02<28:55,37.73s/it][20:42<28:48,38.41s/it][21:21<28:14,38.50s/it][21:56<26:57,37.61s/it][22:31<25:35,36.55s/it][23:06<24:45,36.22s/it][23:40<23:39,35.49s/it][24:16<23:08,35.59s/it][24:51<22:28,35.48s/it][25:26<21:51,35.45s/it][26:02<21:16,35.46s/it][26:37<20:40,35.44s/it][27:14<20:18,35.85s/it][27:51<19:54,36.21s/it][28:24<18:51,35.36s/it][28:59<18:06,35.06s/it][29:33<17:27,34.92s/it][30:10<17:09,35.51s/it][30:49<17:00,36.45s/it][31:24<16:13,36.05s/it][31:59<15:30,35.80s/it][32:35<14:53,35.74s/it][33:11<14:22,35.95s/it][33:47<13:48,36.03s/it][34:23<13:10,35.95s/it][35:00<12:40,36.22s/it][35:35<11:59,35.95s/it][36:10<11:16,35.59s/it][36:48<10:50,36.15s/it][37:26<10:24,36.76s/it][38:03<09:48,36.77s/it][38:39<09:10,36.73s/it][39:18<08:42,37.29s/it][39:55<08:05,37.37s/it][40:31<07:21,36.81s/it][41:05<06:37,36.14s/it][41:41<06:00,36.06s/it][42:17<05:22,35.81s/it][42:52<04:46,35.85s/it][43:31<04:16,36.68s/it][44:06<03:36,36.07s/it][44:40<02:58,35.69s/it][45:16<02:22,35.65s/it][45:50<01:45,35.20s/it][46:25<01:09,34.94s/it][47:01<00:35,35.29s/it][47:34<00:00,34.85s/it][47:34<00:00,36.14s/it][2024/11/20 17:50:54] - autoattack - Run 79: Accuracy: 0.5942

[00:00<?,?it/s][00:34<45:06,34.69s/it][01:07<43:06,33.59s/it][01:43<43:50,34.61s/it][02:20<44:36,35.68s/it][02:56<43:54,35.60s/it][03:30<42:52,35.24s/it][04:08<43:15,36.05s/it][04:47<43:47,37.00s/it][05:22<42:31,36.46s/it][05:56<41:06,35.74s/it][06:31<40:11,35.47s/it][07:07<39:47,35.63s/it][07:43<39:14,35.67s/it][08:20<39:09,36.14s/it][08:55<38:14,35.85s/it][09:33<38:05,36.28s/it][10:09<37:35,36.38s/it][10:46<37:04,36.46s/it][11:23<36:46,36.77s/it][12:02<36:50,37.47s/it][12:40<36:18,37.56s/it][13:16<35:14,37.09s/it][13:55<35:02,37.55s/it][14:31<34:06,37.21s/it][15:06<32:53,36.55s/it][15:42<32:04,36.31s/it][16:21<32:06,37.05s/it][16:58<31:32,37.11s/it][17:37<31:24,37.68s/it][18:17<31:15,38.27s/it][18:53<30:10,37.73s/it][19:31<29:31,37.69s/it][20:09<29:03,37.91s/it][20:50<29:05,38.78s/it][21:28<28:11,38.44s/it][22:05<27:13,37.99s/it][22:40<25:58,37.10s/it][23:15<24:57,36.52s/it][23:50<24:07,36.18s/it][24:25<23:14,35.76s/it][25:01<22:41,35.83s/it][25:35<21:51,35.44s/it][26:14<21:47,36.32s/it][26:51<21:21,36.62s/it][27:29<20:56,36.96s/it][28:06<20:18,36.93s/it][28:42<19:32,36.64s/it][29:18<18:49,36.42s/it][29:54<18:15,36.52s/it][30:33<17:54,37.05s/it][31:06<16:43,35.84s/it][31:39<15:45,35.04s/it][32:13<15:06,34.88s/it][32:48<14:31,34.85s/it][33:24<14:01,35.05s/it][34:00<13:36,35.51s/it][34:35<12:55,35.27s/it][35:11<12:27,35.62s/it][35:47<11:52,35.63s/it][36:25<11:27,36.19s/it][37:01<10:51,36.20s/it][37:36<10:12,36.02s/it][38:11<09:29,35.62s/it][38:46<08:49,35.31s/it][39:23<08:21,35.82s/it][39:58<07:44,35.72s/it][40:34<07:08,35.67s/it][41:08<06:26,35.11s/it][41:43<05:50,35.08s/it][42:16<05:12,34.74s/it][42:51<04:38,34.82s/it][43:28<04:06,35.18s/it][44:05<03:35,35.89s/it][44:41<02:59,35.88s/it][45:17<02:23,35.83s/it][45:53<01:47,35.91s/it][46:29<01:11,35.99s/it][47:04<00:35,35.77s/it][47:36<00:00,34.54s/it][47:36<00:00,36.16s/it][2024/11/20 18:38:31] - autoattack - Run 79: Accuracy: 0.5890

[00:00<?,?it/s][00:31<40:55,31.48s/it][01:04<41:14,32.13s/it][01:39<42:39,33.68s/it][02:15<43:13,34.58s/it][02:52<43:34,35.33s/it][03:27<42:48,35.19s/it][04:03<42:40,35.56s/it][04:38<41:47,35.32s/it][05:12<40:38,34.83s/it][05:47<40:20,35.08s/it][06:23<40:01,35.31s/it][07:00<40:08,35.95s/it][07:37<39:52,36.25s/it][08:13<39:06,36.10s/it][08:47<37:54,35.55s/it][09:23<37:12,35.44s/it][09:58<36:40,35.49s/it][10:33<35:58,35.38s/it][11:08<35:01,35.03s/it][11:42<34:17,34.87s/it][12:18<33:59,35.16s/it][12:54<33:33,35.33s/it][13:31<33:29,35.88s/it][14:08<33:17,36.32s/it][14:46<33:05,36.77s/it][15:22<32:13,36.49s/it][15:58<31:30,36.36s/it][16:34<30:50,36.29s/it][17:12<30:35,36.71s/it][17:48<30:00,36.75s/it][18:26<29:38,37.05s/it][19:03<29:01,37.05s/it][19:40<28:16,36.88s/it][20:16<27:30,36.67s/it][20:53<27:01,36.85s/it][21:29<26:06,36.43s/it][22:04<25:14,36.07s/it][22:39<24:33,35.93s/it][23:13<23:27,35.20s/it][23:47<22:37,34.82s/it][24:21<21:51,34.52s/it][24:54<21:05,34.20s/it][25:27<20:18,33.84s/it][26:02<19:53,34.11s/it][26:41<20:07,35.51s/it][27:15<19:20,35.18s/it][27:48<18:27,34.62s/it][28:23<17:55,34.68s/it][29:00<17:35,35.17s/it][29:34<16:54,34.97s/it][30:10<16:26,35.22s/it][30:45<15:51,35.24s/it][31:19<15:07,34.90s/it][31:54<14:32,34.91s/it][32:28<13:50,34.59s/it][33:04<13:28,35.16s/it][33:37<12:35,34.34s/it][34:10<11:53,34.00s/it][34:44<11:20,34.00s/it][35:20<10:54,34.44s/it][35:57<10:34,35.24s/it][36:34<10:09,35.85s/it][37:09<09:31,35.71s/it][37:43<08:47,35.15s/it][38:21<08:22,35.87s/it][38:58<07:52,36.35s/it][39:31<07:03,35.32s/it][40:06<06:25,35.06s/it][40:39<05:47,34.71s/it][41:16<05:16,35.16s/it][41:52<04:42,35.36s/it][42:28<04:09,35.58s/it][43:03<03:32,35.42s/it][43:38<02:56,35.29s/it][44:17<02:25,36.43s/it][44:53<01:48,36.30s/it][45:31<01:13,36.74s/it][46:12<00:38,38.29s/it][46:46<00:00,36.90s/it][46:46<00:00,35.53s/it][2024/11/20 19:25:17] - autoattack - Run 79: Accuracy: 0.5906

[00:00<?,?it/s][00:35<45:57,35.36s/it][01:09<44:28,34.66s/it][01:42<42:59,33.94s/it][02:18<43:10,34.54s/it][02:54<43:32,35.31s/it][03:30<43:03,35.40s/it][04:06<42:48,35.67s/it][04:43<42:41,36.08s/it][05:19<42:07,36.11s/it][05:55<41:35,36.16s/it][06:32<41:11,36.34s/it][07:08<40:20,36.12s/it][07:43<39:30,35.91s/it][08:21<39:35,36.55s/it][08:58<39:10,36.73s/it][09:35<38:26,36.61s/it][10:12<37:57,36.74s/it][10:48<37:20,36.72s/it][11:28<37:33,37.55s/it][12:04<36:33,37.18s/it][12:43<36:30,37.76s/it][13:19<35:12,37.05s/it][13:55<34:19,36.78s/it][14:31<33:28,36.51s/it][15:09<33:15,36.95s/it][15:43<32:00,36.24s/it][16:24<32:25,37.41s/it][17:03<32:13,37.90s/it][17:40<31:35,37.90s/it][18:17<30:37,37.50s/it][18:53<29:37,37.02s/it][19:32<29:24,37.54s/it][20:07<28:22,37.02s/it][20:46<28:06,37.48s/it][21:23<27:16,37.20s/it][21:58<26:16,36.66s/it][22:34<25:36,36.59s/it][23:11<24:55,36.48s/it][23:48<24:35,36.88s/it][24:25<23:56,36.84s/it][25:01<23:12,36.66s/it][25:39<22:48,36.99s/it][26:15<21:54,36.52s/it][26:50<21:08,36.25s/it][27:26<20:24,36.00s/it][28:04<20:07,36.58s/it][28:39<19:16,36.14s/it][29:18<19:06,36.97s/it][29:55<18:34,37.17s/it][30:34<18:12,37.68s/it][31:08<17:04,36.58s/it][31:45<16:28,36.62s/it][32:20<15:42,36.26s/it][32:57<15:06,36.26s/it][33:32<14:23,36.00s/it][34:06<13:37,35.52s/it][34:41<12:54,35.19s/it][35:13<12:03,34.44s/it][35:48<11:29,34.48s/it][36:23<10:59,34.73s/it][37:00<10:33,35.20s/it][37:37<10:08,35.77s/it][38:12<09:31,35.72s/it][38:49<09:01,36.11s/it][39:24<08:20,35.73s/it][40:01<07:46,35.91s/it][40:35<07:05,35.45s/it][41:09<06:25,35.08s/it][41:46<05:55,35.53s/it][42:21<05:19,35.51s/it][42:57<04:44,35.61s/it][43:32<04:08,35.53s/it][44:07<03:31,35.24s/it][44:39<02:52,34.40s/it][45:08<02:10,32.55s/it][45:37<01:34,31.58s/it][46:05<01:01,30.66s/it][46:35<00:30,30.21s/it][47:02<00:00,29.32s/it][47:02<00:00,35.73s/it][2024/11/20 20:12:20] - autoattack - Run 79: Accuracy: 0.5828
[2024/11/20 20:12:20] - autoattack Mean: 0.5885, Std: 0.0039
[2024/11/20 20:12:20] - Testing done.

wandb: - 0.005 MB of 0.005 MB uploadedwandb: \ 0.005 MB of 0.032 MB uploadedwandb: | 0.005 MB of 0.032 MB uploadedwandb: / 0.008 MB of 0.032 MB uploadedwandb: - 0.008 MB of 0.032 MB uploadedwandb: \ 0.008 MB of 0.032 MB uploadedwandb: | 0.032 MB of 0.032 MB uploadedwandb: 
wandb: Run history:
wandb:     Nature Acc Mean ‚ñÅ
wandb:      Nature Acc Std ‚ñÅ
wandb: autoattack_mean_adv ‚ñÅ
wandb:  autoattack_std_adv ‚ñÅ
wandb: 
wandb: Run summary:
wandb:     Nature Acc Mean 0.85904
wandb:      Nature Acc Std 0.00054
wandb: autoattack_mean_adv 0.58846
wandb:  autoattack_std_adv 0.00394
wandb: 
wandb: üöÄ View run misunderstood-frog-8 at: https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa/runs/z5u3kgjv
wandb: Ô∏è‚ö° View job at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa/jobs/QXJ0aWZhY3RDb2xsZWN0aW9uOjQ5NzM2MjQ4Mw==/version_details/v0
wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20241120_161607-z5u3kgjv/logs
