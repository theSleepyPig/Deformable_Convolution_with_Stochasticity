nohup: ignoring input
wandb: Currently logged in as: xuanzhu_07 (xuanzhu_07-university-of-sydney). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.18.7 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.16.3
wandb: Run data is saved locally in /home/yxma/hzx/hzx/hzx/rand_defence/wandb/run-20241120_161958-kw65ygxy
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run volcanic-cloud-11
wandb: ‚≠êÔ∏è View project at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa
wandb: üöÄ View run at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa/runs/kw65ygxy
[2024/11/20 16:20:01] - Namespace(batch_size=128, data_dir='~/datasets/CIFAR10/', dataset='cifar10', epochs=200, network='ResNet18', worker=4, lr_schedule='multistep', lr_min=0.0, lr_max=0.1, weight_decay=0.0005, momentum=0.9, none_random_training=True, rand_deform_training=False, randpos_deform_training=True, randpos_multi_deform_training=False, is_n_repeat=False, reNum=5, only_adv_randpos_training=False, rand_path_training=False, epsilon=8, alpha=2, c=0.0001, steps=1000, seed=0, attack_iters=20, restarts=1, save_dir='logs/ResNet18_DeformableConvolution', pretrain='/home/yxma/hzx/hzx/hzx/rand_defence/ckpt/cifar10/ResNet18/ckpt/model_20241119224633.pth', continue_training=False, lb=2048, pos=0, eot=False, hang=False, device=3)
[2024/11/20 16:20:01] - Dataset: cifar10
[2024/11/20 16:20:03] - Evaluating with standard images with random mask...
Process ID: 1244398
Pretrain model path: /home/yxma/hzx/hzx/hzx/rand_defence/ckpt/cifar10/ResNet18/ckpt/model_20241119224633.pth
Does pretrain model path exist? True
Files already downloaded and verified
Files already downloaded and verified
ResNetPartmask5(
  (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layer1): ModuleList(
    (0): RandonBasicBlock0411(
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): MaskedConv2d(64, 64, kernel_size=(11, 11), stride=(1, 1), padding=(5, 5), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer11): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer2): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer3): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer4): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (linear): Linear(in_features=512, out_features=10, bias=True)
  (normalize): NormalizeByChannelMeanStd(mean=tensor([0.4914, 0.4822, 0.4465], device='cuda:3'), std=tensor([0.2471, 0.2435, 0.2616], device='cuda:3'))
)
Different keys:
normalize.mean
normalize.std
Nature:
[2024/11/20 16:20:04] - Evaluating with standard images with random mask...
tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 1., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 1., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 1., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        ...,


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 1., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 1., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 1., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]]], device='cuda:3')
[2024/11/20 16:20:05] - Evaluating with standard images with random mask...
[2024/11/20 16:20:06] - Evaluating with standard images with random mask...
[2024/11/20 16:20:07] - Evaluating with standard images with random mask...
[2024/11/20 16:20:08] - Nature Acc Mean: 0.8565, Std: 0.0014
AA attacking
[00:00<?,?it/s][00:51<1:07:35,51.99s/it][01:45<1:07:34,52.65s/it][02:47<1:12:02,56.87s/it][03:46<1:12:10,57.73s/it][04:43<1:10:58,57.55s/it][05:50<1:13:54,60.75s/it][06:20<1:00:45,50.63s/it][07:03<57:01,48.19s/it]  [07:41<52:33,45.05s/it][08:22<50:26,43.87s/it][09:06<49:40,43.82s/it][09:51<49:23,44.24s/it][10:33<47:54,43.55s/it][11:15<46:54,43.30s/it][11:58<45:58,43.10s/it][12:43<45:41,43.51s/it][13:25<44:46,43.34s/it][14:09<44:14,43.52s/it][14:54<43:56,43.94s/it][15:33<41:35,42.30s/it][16:15<40:59,42.40s/it][16:53<38:58,41.03s/it][17:33<38:00,40.73s/it][17:58<32:49,35.80s/it][18:29<31:02,34.49s/it][19:04<30:42,34.76s/it][19:39<30:10,34.82s/it][20:16<30:07,35.44s/it][20:53<29:56,35.94s/it][21:26<28:31,34.94s/it][21:58<27:20,34.17s/it][22:35<27:16,34.81s/it][23:07<26:10,34.15s/it][23:40<25:19,33.76s/it][24:14<24:46,33.78s/it][24:50<24:43,34.50s/it][25:26<24:25,34.89s/it][26:01<23:57,35.07s/it][26:36<23:20,35.00s/it][27:10<22:29,34.59s/it][27:45<22:02,34.81s/it][28:18<21:01,34.09s/it][28:53<20:36,34.36s/it][29:20<18:52,32.36s/it][29:48<17:35,31.04s/it][30:18<16:54,30.75s/it][30:48<16:17,30.53s/it][31:16<15:17,29.58s/it][31:46<14:53,29.77s/it][32:14<14:07,29.23s/it][32:41<13:21,28.64s/it][33:08<12:37,28.06s/it][33:37<12:18,28.41s/it][34:05<11:48,28.33s/it][34:35<11:27,28.66s/it][35:04<11:06,28.99s/it][35:31<10:22,28.30s/it][35:57<09:40,27.63s/it][36:27<09:26,28.34s/it][36:56<08:58,28.32s/it][37:24<08:28,28.25s/it][37:50<07:52,27.82s/it][38:20<07:32,28.25s/it][38:47<07:01,28.11s/it][39:14<06:28,27.74s/it][39:43<06:03,27.97s/it][40:12<05:41,28.43s/it][40:39<05:07,27.97s/it][41:08<04:41,28.14s/it][41:37<04:15,28.39s/it][42:04<03:45,28.15s/it][42:27<03:05,26.51s/it][42:54<02:39,26.62s/it][43:22<02:15,27.03s/it][43:50<01:49,27.30s/it][44:18<01:23,27.69s/it][44:46<00:55,27.73s/it][45:13<00:27,27.36s/it][45:38<00:00,26.85s/it][45:38<00:00,34.67s/it][2024/11/20 17:05:47] - autoattack - Run 79: Accuracy: 0.5987

[00:00<?,?it/s][00:27<36:08,27.80s/it][00:54<34:38,27.00s/it][01:22<34:54,27.56s/it][01:48<33:48,27.05s/it][02:17<34:04,27.63s/it][02:44<33:17,27.36s/it][03:13<33:31,27.94s/it][03:42<33:27,28.27s/it][04:09<32:36,27.94s/it][04:38<32:20,28.13s/it][05:05<31:29,27.79s/it][05:33<31:11,27.93s/it][06:01<30:52,28.06s/it][06:32<31:08,28.75s/it][06:59<30:19,28.43s/it][07:28<29:47,28.37s/it][07:54<28:38,27.71s/it][08:20<27:47,27.33s/it][08:46<26:51,26.85s/it][09:12<26:03,26.50s/it][09:39<25:47,26.68s/it][10:06<25:37,26.98s/it][10:32<24:52,26.65s/it][10:58<24:08,26.34s/it][11:24<23:38,26.27s/it][11:50<23:03,26.10s/it][12:15<22:28,25.92s/it][12:41<22:03,25.96s/it][13:07<21:30,25.81s/it][13:32<20:53,25.59s/it][13:59<20:56,26.18s/it][14:25<20:30,26.19s/it][14:54<20:31,26.76s/it][15:21<20:13,26.97s/it][15:48<19:49,27.03s/it][16:14<19:10,26.76s/it][16:40<18:33,26.50s/it][17:08<18:22,26.88s/it][17:35<17:57,26.94s/it][18:02<17:29,26.90s/it][18:29<17:03,26.94s/it][18:54<16:14,26.34s/it][19:13<14:33,24.27s/it][19:32<13:10,22.58s/it][19:51<12:12,21.55s/it][20:10<11:22,20.69s/it][20:31<11:06,20.84s/it][20:53<11:01,21.33s/it][21:16<10:48,21.61s/it][21:36<10:12,21.13s/it][21:57<09:53,21.21s/it][22:18<09:28,21.05s/it][22:37<08:50,20.39s/it][22:56<08:18,19.95s/it][23:14<07:49,19.56s/it][23:33<07:28,19.48s/it][23:52<07:03,19.27s/it][24:12<06:47,19.40s/it][24:32<06:28,19.44s/it][24:51<06:07,19.36s/it][25:10<05:45,19.22s/it][25:31<05:37,19.87s/it][25:50<05:15,19.72s/it][26:12<05:05,20.36s/it][26:31<04:38,19.93s/it][26:51<04:17,19.79s/it][27:09<03:53,19.48s/it][27:28<03:31,19.26s/it][27:48<03:15,19.50s/it][28:10<03:02,20.25s/it][28:30<02:41,20.13s/it][28:49<02:19,19.93s/it][29:10<02:01,20.20s/it][29:32<01:43,20.76s/it][29:54<01:24,21.03s/it][30:16<01:04,21.46s/it][30:35<00:41,20.72s/it][30:55<00:20,20.27s/it][31:13<00:00,19.73s/it][31:13<00:00,23.72s/it][2024/11/20 17:37:01] - autoattack - Run 79: Accuracy: 0.6016

[00:00<?,?it/s][00:19<25:10,19.37s/it][00:38<24:37,19.19s/it][00:58<24:58,19.72s/it][01:18<24:29,19.60s/it][01:37<24:06,19.55s/it][01:56<23:30,19.32s/it][02:18<24:04,20.06s/it][02:37<23:25,19.79s/it][02:56<22:42,19.47s/it][03:14<22:09,19.26s/it][03:33<21:40,19.12s/it][03:52<21:19,19.09s/it][04:11<21:02,19.13s/it][04:31<20:45,19.16s/it][04:50<20:28,19.20s/it][05:09<20:01,19.08s/it][05:28<19:44,19.11s/it][05:49<19:59,19.66s/it][06:10<20:13,20.23s/it][06:33<20:28,20.82s/it][06:54<20:21,21.06s/it][07:16<20:08,21.21s/it][07:38<20:02,21.48s/it][08:00<19:48,21.61s/it][08:22<19:32,21.71s/it][08:41<18:37,21.09s/it][09:00<17:42,20.43s/it][09:19<16:54,19.90s/it][09:38<16:24,19.69s/it][09:57<15:59,19.57s/it][10:17<15:35,19.48s/it][10:36<15:16,19.51s/it][10:56<14:57,19.51s/it][11:15<14:33,19.41s/it][11:36<14:39,19.99s/it][11:56<14:20,20.00s/it][12:18<14:15,20.36s/it][12:37<13:40,20.02s/it][12:57<13:19,20.00s/it][13:16<12:50,19.76s/it][13:36<12:36,19.92s/it][13:59<12:45,20.69s/it][14:19<12:20,20.57s/it][14:39<11:53,20.38s/it][14:59<11:25,20.15s/it][15:19<11:04,20.14s/it][15:38<10:39,19.98s/it][15:57<10:10,19.68s/it][16:21<10:22,20.75s/it][16:41<09:58,20.65s/it][17:00<09:24,20.18s/it][17:19<08:57,19.91s/it][17:40<08:46,20.24s/it][18:00<08:18,19.92s/it][18:19<07:53,19.72s/it][18:38<07:28,19.49s/it][18:56<07:01,19.17s/it][19:15<06:40,19.07s/it][19:34<06:21,19.09s/it][19:53<06:03,19.12s/it][20:14<05:53,19.62s/it][20:35<05:42,20.15s/it][20:57<05:31,20.69s/it][21:20<05:17,21.14s/it][21:41<04:57,21.24s/it][22:14<05:21,24.70s/it][22:34<04:39,23.28s/it][22:53<04:04,22.19s/it][23:12<03:32,21.21s/it][23:32<03:05,20.66s/it][23:51<02:41,20.13s/it][24:10<02:18,19.85s/it][24:31<02:01,20.23s/it][24:53<01:43,20.78s/it][25:12<01:21,20.32s/it][25:31<00:59,19.97s/it][25:51<00:39,19.80s/it][26:10<00:19,19.54s/it][26:29<00:00,19.31s/it][26:29<00:00,20.11s/it][2024/11/20 18:03:30] - autoattack - Run 79: Accuracy: 0.6085

[00:00<?,?it/s][00:19<25:07,19.33s/it][00:38<24:54,19.41s/it][00:58<24:35,19.41s/it][01:17<24:01,19.22s/it][01:39<25:02,20.31s/it][01:59<24:32,20.18s/it][02:18<23:54,19.93s/it][02:39<24:01,20.30s/it][03:02<24:30,21.01s/it][03:22<23:46,20.67s/it][03:41<22:59,20.29s/it][04:01<22:24,20.07s/it][04:20<21:48,19.82s/it][04:40<21:21,19.72s/it][04:59<20:54,19.59s/it][05:18<20:26,19.47s/it][05:38<20:11,19.53s/it][05:58<20:00,19.68s/it][06:18<19:43,19.72s/it][06:37<19:23,19.72s/it][06:57<19:08,19.80s/it][07:18<18:58,19.97s/it][07:47<21:24,22.93s/it][08:37<28:18,30.88s/it][09:12<28:58,32.19s/it][09:38<26:40,30.19s/it][10:11<27:05,31.26s/it][10:40<25:52,30.44s/it][11:07<24:33,29.46s/it][11:38<24:21,29.84s/it][12:05<23:16,29.09s/it][12:30<21:45,27.79s/it][12:59<21:34,28.14s/it][13:29<21:29,28.66s/it][13:53<20:03,27.34s/it][14:16<18:45,26.18s/it][14:42<18:17,26.12s/it][15:10<18:13,26.67s/it][15:34<17:11,25.78s/it][15:58<16:28,25.34s/it][16:24<16:00,25.27s/it][16:44<14:42,23.86s/it][17:04<13:35,22.65s/it][17:24<12:48,21.96s/it][17:44<12:02,21.25s/it][18:04<11:31,20.97s/it][18:24<11:03,20.73s/it][18:46<10:46,20.86s/it][19:09<10:46,21.54s/it][19:28<10:09,21.01s/it][19:49<09:40,20.74s/it][20:09<09:21,20.79s/it][20:29<08:47,20.29s/it][20:48<08:23,20.15s/it][21:08<07:57,19.90s/it][21:29<07:47,20.33s/it][21:50<07:30,20.47s/it][22:12<07:22,21.08s/it][22:34<07:07,21.35s/it][22:56<06:45,21.34s/it][23:19<06:32,21.81s/it][23:41<06:14,22.01s/it][24:03<05:53,22.10s/it][24:26<05:32,22.15s/it][24:47<05:07,21.95s/it][25:07<04:37,21.37s/it][25:27<04:11,20.98s/it][25:47<03:46,20.61s/it][26:06<03:22,20.29s/it][26:26<03:00,20.03s/it][26:47<02:43,20.48s/it][27:08<02:23,20.48s/it][27:28<02:01,20.26s/it][27:47<01:40,20.05s/it][28:07<01:19,19.97s/it][28:30<01:02,20.94s/it][28:50<00:41,20.71s/it][29:10<00:20,20.42s/it][29:29<00:00,19.98s/it][29:29<00:00,22.40s/it][2024/11/20 18:33:00] - autoattack - Run 79: Accuracy: 0.6009

[00:00<?,?it/s][00:21<28:12,21.70s/it][00:44<28:31,22.23s/it][01:04<27:01,21.34s/it][01:24<25:47,20.63s/it][01:44<25:07,20.37s/it][02:03<24:32,20.17s/it][02:24<24:15,20.22s/it][02:44<24:00,20.28s/it][03:04<23:36,20.23s/it][03:25<23:21,20.31s/it][03:45<23:00,20.30s/it][04:05<22:28,20.13s/it][04:25<22:16,20.25s/it][04:45<21:52,20.19s/it][05:08<22:27,21.05s/it][05:31<22:38,21.57s/it][05:52<22:10,21.46s/it][06:15<22:11,21.84s/it][06:38<22:09,22.16s/it][06:59<21:20,21.70s/it][07:19<20:43,21.45s/it][07:40<20:11,21.26s/it][08:03<20:15,21.70s/it][08:25<20:07,21.96s/it][08:49<20:06,22.34s/it][09:10<19:33,22.14s/it][09:31<18:48,21.71s/it][09:53<18:27,21.72s/it][10:12<17:29,20.99s/it][10:33<17:12,21.07s/it][10:55<16:57,21.21s/it][11:18<17:00,21.72s/it][11:39<16:27,21.46s/it][11:59<15:52,21.17s/it][12:20<15:25,21.04s/it][12:40<14:55,20.83s/it][13:04<15:06,21.58s/it][13:27<15:11,22.24s/it][13:47<14:15,21.39s/it][14:07<13:35,20.91s/it][14:26<13:00,20.54s/it][14:46<12:28,20.23s/it][15:05<11:59,19.99s/it][15:25<11:40,20.01s/it][15:46<11:28,20.24s/it][16:06<11:09,20.27s/it][16:28<11:00,20.65s/it][16:51<10:59,21.28s/it][17:13<10:45,21.50s/it][17:35<10:34,21.87s/it][17:58<10:14,21.95s/it][18:19<09:45,21.70s/it][18:40<09:19,21.50s/it][19:00<08:50,21.23s/it][19:23<08:40,21.69s/it][19:44<08:12,21.42s/it][20:03<07:39,20.88s/it][20:23<07:11,20.55s/it][20:45<06:55,20.79s/it][21:06<06:41,21.12s/it][21:27<06:19,21.07s/it][21:47<05:50,20.64s/it][22:07<05:25,20.33s/it][22:27<05:04,20.29s/it][22:47<04:41,20.11s/it][23:07<04:21,20.10s/it][23:29<04:10,20.86s/it][23:51<03:52,21.17s/it][24:13<03:33,21.31s/it][24:33<03:10,21.12s/it][24:54<02:46,20.86s/it][25:15<02:25,20.83s/it][25:35<02:05,20.84s/it][25:56<01:43,20.77s/it][26:16<01:22,20.65s/it][26:36<01:00,20.33s/it][26:56<00:40,20.14s/it][27:15<00:20,20.04s/it][27:37<00:00,20.57s/it][27:37<00:00,20.98s/it][2024/11/20 19:00:37] - autoattack - Run 79: Accuracy: 0.6001
[2024/11/20 19:00:37] - autoattack Mean: 0.6020, Std: 0.0034
[2024/11/20 19:00:37] - Testing done.

wandb: - 0.005 MB of 0.005 MB uploadedwandb: \ 0.005 MB of 0.023 MB uploadedwandb: | 0.005 MB of 0.023 MB uploadedwandb: / 0.013 MB of 0.023 MB uploadedwandb: - 0.013 MB of 0.023 MB uploadedwandb: \ 0.013 MB of 0.023 MB uploadedwandb: | 0.013 MB of 0.023 MB uploadedwandb: / 0.023 MB of 0.023 MB uploadedwandb: 
wandb: Run history:
wandb:     Nature Acc Mean ‚ñÅ
wandb:      Nature Acc Std ‚ñÅ
wandb: autoattack_mean_adv ‚ñÅ
wandb:  autoattack_std_adv ‚ñÅ
wandb: 
wandb: Run summary:
wandb:     Nature Acc Mean 0.85648
wandb:      Nature Acc Std 0.00144
wandb: autoattack_mean_adv 0.60196
wandb:  autoattack_std_adv 0.00341
wandb: 
wandb: üöÄ View run volcanic-cloud-11 at: https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa/runs/kw65ygxy
wandb: Ô∏è‚ö° View job at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa/jobs/QXJ0aWZhY3RDb2xsZWN0aW9uOjQ5NzM2MjQ4Mw==/version_details/v0
wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20241120_161958-kw65ygxy/logs
