nohup: ignoring input
wandb: Currently logged in as: xuanzhu_07 (xuanzhu_07-university-of-sydney). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.19.8 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.16.3
wandb: Run data is saved locally in /home/yxma/hzx/hzx/hzx/rand_defence/wandb/run-20250331_030315-675yct2g
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run glad-totem-15
wandb: ‚≠êÔ∏è View project at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-stlmnist
wandb: üöÄ View run at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-stlmnist/runs/675yct2g
[2025/03/31 03:03:18] - Namespace(batch_size=128, data_dir='~/datasets/CIFAR/', dataset='fashion-mnist', epochs=200, network='ResNet18', worker=4, lr_schedule='multistep', lr_min=0.0, lr_max=0.1, weight_decay=0.0005, momentum=0.9, none_random_training=True, rand_deform_training=False, randpos_deform_training=True, randpos_multi_deform_training=False, is_n_repeat=False, reNum=5, only_adv_randpos_training=False, rand_path_training=False, epsilon=8, alpha=2, c=0.0001, steps=1000, seed=0, attack_iters=20, restarts=1, save_dir='logs/ResNet18_DeformableConvolution', pretrain='/home/yxma/hzx/hzx/hzx/rand_defence/ckpt/fashion-mnist/ResNet18/ckpt/model_20250330174133.pth', continue_training=False, lb=2048, pos=0, eot=False, hang=False, device=1)
[2025/03/31 03:03:18] - Dataset: fashion-mnist
[2025/03/31 03:03:20] - Evaluating with standard images with random mask...
Process ID: 974403
Pretrain model path: /home/yxma/hzx/hzx/hzx/rand_defence/ckpt/fashion-mnist/ResNet18/ckpt/model_20250330174133.pth
Does pretrain model path exist? True
üìê Final image shape in dataset (after transform): torch.Size([3, 28, 28])
ResNetPartmask5(
  (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layer1): ModuleList(
    (0): RandonBasicBlock02(
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): MaskedConv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer11): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer2): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer3): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer4): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (linear): Linear(in_features=512, out_features=10, bias=True)
  (normalize): NormalizeByChannelMeanStd(mean=tensor([0.2860], device='cuda:1'), std=tensor([0.3530], device='cuda:1'))
)
Different keys:
normalize.mean
normalize.std
Nature:
[2025/03/31 03:03:23] - Evaluating with standard images with random mask...
tensor([[[[0., 0., 0., 0., 0.],
          [1., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 1.]]],


        [[[0., 0., 0., 0., 0.],
          [1., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 1.]]],


        [[[0., 0., 0., 0., 0.],
          [1., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 1.]]],


        ...,


        [[[0., 0., 0., 0., 0.],
          [1., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 1.]]],


        [[[0., 0., 0., 0., 0.],
          [1., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 1.]]],


        [[[0., 0., 0., 0., 0.],
          [1., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 1.]]]], device='cuda:1')
[2025/03/31 03:03:24] - Evaluating with standard images with random mask...
[2025/03/31 03:03:25] - Nature Acc Mean: 0.9143, Std: 0.0004
PGD attacking
[00:00<?,?it/s][00:00<00:36, 2.12it/s][00:00<00:27, 2.77it/s][00:01<00:24, 3.07it/s][00:01<00:23, 3.23it/s][00:01<00:22, 3.33it/s][00:01<00:21, 3.39it/s][00:02<00:20, 3.43it/s][00:02<00:20, 3.46it/s][00:02<00:20, 3.48it/s][00:03<00:19, 3.50it/s][00:03<00:19, 3.50it/s][00:03<00:19, 3.51it/s][00:03<00:18, 3.52it/s][00:04<00:18, 3.52it/s][00:04<00:18, 3.52it/s][00:04<00:17, 3.52it/s][00:05<00:17, 3.52it/s][00:05<00:17, 3.53it/s][00:05<00:17, 3.53it/s][00:05<00:16, 3.52it/s][00:06<00:16, 3.53it/s][00:06<00:16, 3.53it/s][00:06<00:15, 3.53it/s][00:06<00:15, 3.53it/s][00:07<00:15, 3.53it/s][00:07<00:15, 3.52it/s][00:07<00:14, 3.53it/s][00:08<00:14, 3.53it/s][00:08<00:14, 3.54it/s][00:08<00:13, 3.55it/s][00:08<00:13, 3.54it/s][00:09<00:13, 3.54it/s][00:09<00:13, 3.54it/s][00:09<00:12, 3.54it/s][00:10<00:12, 3.54it/s][00:10<00:12, 3.54it/s][00:10<00:11, 3.53it/s][00:10<00:11, 3.53it/s][00:11<00:11, 3.53it/s][00:11<00:11, 3.54it/s][00:11<00:10, 3.55it/s][00:12<00:10, 3.54it/s][00:12<00:10, 3.54it/s][00:12<00:09, 3.53it/s][00:12<00:09, 3.53it/s][00:13<00:09, 3.52it/s][00:13<00:09, 3.52it/s][00:13<00:08, 3.53it/s][00:14<00:08, 3.55it/s][00:14<00:08, 3.55it/s][00:14<00:07, 3.55it/s][00:14<00:07, 3.55it/s][00:15<00:07, 3.52it/s][00:15<00:07, 3.53it/s][00:15<00:06, 3.52it/s][00:16<00:06, 3.52it/s][00:16<00:06, 3.52it/s][00:16<00:05, 3.53it/s][00:16<00:05, 3.53it/s][00:17<00:05, 3.53it/s][00:17<00:05, 3.53it/s][00:17<00:04, 3.53it/s][00:18<00:04, 3.53it/s][00:18<00:04, 3.53it/s][00:18<00:03, 3.53it/s][00:18<00:03, 3.92it/s][00:19<00:03, 3.91it/s][00:19<00:02, 3.78it/s][00:19<00:02, 3.71it/s][00:19<00:02, 3.65it/s][00:20<00:02, 3.64it/s][00:20<00:01, 3.63it/s][00:20<00:01, 3.61it/s][00:21<00:01, 3.58it/s][00:21<00:01, 3.57it/s][00:21<00:00, 3.56it/s][00:21<00:00, 3.55it/s][00:22<00:00, 3.55it/s][00:22<00:00, 4.21it/s][00:22<00:00, 3.55it/s][2025/03/31 03:03:47] - pgd - Run 79: Accuracy: 0.8835

[00:00<?,?it/s][00:00<00:22, 3.52it/s][00:00<00:21, 3.52it/s][00:00<00:21, 3.52it/s][00:01<00:21, 3.52it/s][00:01<00:21, 3.52it/s][00:01<00:20, 3.52it/s][00:01<00:20, 3.53it/s][00:02<00:20, 3.53it/s][00:02<00:19, 3.54it/s][00:02<00:19, 3.54it/s][00:03<00:19, 3.54it/s][00:03<00:18, 3.54it/s][00:03<00:18, 3.54it/s][00:03<00:18, 3.53it/s][00:04<00:18, 3.53it/s][00:04<00:17, 3.52it/s][00:04<00:17, 3.52it/s][00:05<00:17, 3.53it/s][00:05<00:17, 3.52it/s][00:05<00:16, 3.52it/s][00:05<00:16, 3.52it/s][00:06<00:16, 3.52it/s][00:06<00:15, 3.53it/s][00:06<00:15, 3.52it/s][00:07<00:15, 3.52it/s][00:07<00:14, 3.54it/s][00:07<00:14, 3.56it/s][00:07<00:14, 3.55it/s][00:08<00:14, 3.55it/s][00:08<00:13, 3.52it/s][00:08<00:13, 3.52it/s][00:09<00:13, 3.52it/s][00:09<00:13, 3.52it/s][00:09<00:12, 3.53it/s][00:09<00:12, 3.53it/s][00:10<00:12, 3.53it/s][00:10<00:11, 3.53it/s][00:10<00:11, 3.53it/s][00:11<00:11, 3.53it/s][00:11<00:11, 3.52it/s][00:11<00:10, 3.53it/s][00:11<00:10, 3.53it/s][00:12<00:10, 3.53it/s][00:12<00:09, 3.52it/s][00:12<00:09, 3.53it/s][00:13<00:09, 3.56it/s][00:13<00:09, 3.55it/s][00:13<00:08, 3.52it/s][00:13<00:08, 3.52it/s][00:14<00:08, 3.52it/s][00:14<00:07, 3.52it/s][00:14<00:07, 3.52it/s][00:15<00:07, 3.52it/s][00:15<00:07, 3.52it/s][00:15<00:06, 3.51it/s][00:15<00:06, 3.52it/s][00:16<00:06, 3.51it/s][00:16<00:05, 3.50it/s][00:16<00:05, 3.50it/s][00:17<00:05, 3.52it/s][00:17<00:05, 3.51it/s][00:17<00:04, 3.92it/s][00:17<00:03, 4.48it/s][00:17<00:03, 4.79it/s][00:17<00:02, 5.02it/s][00:18<00:02, 5.42it/s][00:18<00:02, 5.94it/s][00:18<00:01, 6.12it/s][00:18<00:01, 6.07it/s][00:18<00:01, 5.99it/s][00:18<00:01, 5.88it/s][00:19<00:01, 5.86it/s][00:19<00:01, 5.79it/s][00:19<00:00, 5.84it/s][00:19<00:00, 5.84it/s][00:19<00:00, 5.82it/s][00:19<00:00, 5.86it/s][00:20<00:00, 5.79it/s][00:20<00:00, 6.30it/s][00:20<00:00, 3.90it/s][2025/03/31 03:04:07] - pgd - Run 79: Accuracy: 0.8842

[00:00<?,?it/s][00:00<00:14, 5.44it/s][00:00<00:13, 5.75it/s][00:00<00:13, 5.70it/s][00:00<00:13, 5.75it/s][00:00<00:13, 5.68it/s][00:01<00:12, 5.73it/s][00:01<00:12, 5.79it/s][00:01<00:11, 5.99it/s][00:01<00:10, 6.44it/s][00:01<00:10, 6.70it/s][00:01<00:10, 6.47it/s][00:01<00:10, 6.25it/s][00:02<00:10, 6.10it/s][00:02<00:10, 6.01it/s][00:02<00:10, 5.94it/s][00:02<00:10, 5.79it/s][00:02<00:10, 5.79it/s][00:03<00:10, 5.78it/s][00:03<00:10, 5.74it/s][00:03<00:10, 5.74it/s][00:03<00:10, 5.69it/s][00:03<00:09, 5.74it/s][00:03<00:09, 5.77it/s][00:04<00:09, 5.80it/s][00:04<00:09, 5.79it/s][00:04<00:09, 5.71it/s][00:04<00:09, 5.75it/s][00:04<00:08, 5.78it/s][00:04<00:08, 5.78it/s][00:05<00:08, 5.79it/s][00:05<00:08, 5.71it/s][00:05<00:08, 5.74it/s][00:05<00:07, 5.76it/s][00:05<00:07, 5.77it/s][00:05<00:07, 5.76it/s][00:06<00:07, 5.72it/s][00:06<00:07, 5.74it/s][00:06<00:07, 5.76it/s][00:06<00:06, 5.77it/s][00:06<00:06, 5.78it/s][00:07<00:06, 5.69it/s][00:07<00:06, 5.70it/s][00:07<00:06, 5.72it/s][00:07<00:06, 5.76it/s][00:07<00:05, 5.74it/s][00:07<00:05, 5.67it/s][00:08<00:05, 5.69it/s][00:08<00:05, 5.71it/s][00:08<00:05, 5.75it/s][00:08<00:05, 5.76it/s][00:08<00:04, 5.68it/s][00:08<00:04, 5.72it/s][00:09<00:04, 5.75it/s][00:09<00:04, 5.69it/s][00:09<00:04, 5.80it/s][00:09<00:03, 5.85it/s][00:09<00:03, 5.92it/s][00:09<00:03, 5.98it/s][00:10<00:03, 6.04it/s][00:10<00:03, 6.07it/s][00:10<00:02, 6.09it/s][00:10<00:02, 6.09it/s][00:10<00:02, 6.12it/s][00:10<00:02, 6.11it/s][00:11<00:02, 6.11it/s][00:11<00:02, 6.11it/s][00:11<00:01, 6.10it/s][00:11<00:01, 6.13it/s][00:11<00:01, 6.15it/s][00:11<00:01, 6.13it/s][00:12<00:01, 6.12it/s][00:12<00:01, 6.12it/s][00:12<00:00, 6.16it/s][00:12<00:00, 6.16it/s][00:12<00:00, 6.15it/s][00:12<00:00, 6.16it/s][00:13<00:00, 6.16it/s][00:13<00:00, 6.15it/s][00:13<00:00, 6.68it/s][00:13<00:00, 5.92it/s][2025/03/31 03:04:21] - pgd - Run 79: Accuracy: 0.8841
[2025/03/31 03:04:21] - pgd Mean: 0.8839, Std: 0.0003
[2025/03/31 03:04:21] - PGD Acc: Mean: 0.8839, Variance: 0.0003

AA attacking
[00:00<?,?it/s][00:43<56:35,43.53s/it][01:27<56:18,43.87s/it][02:09<54:28,43.01s/it][02:51<53:19,42.66s/it][03:33<52:22,42.47s/it][04:16<51:53,42.65s/it][05:00<51:44,43.12s/it][05:46<51:50,43.80s/it][06:30<51:05,43.80s/it][07:11<49:42,43.23s/it][07:54<48:47,43.05s/it][08:36<47:48,42.81s/it][09:19<46:59,42.73s/it][10:03<46:40,43.08s/it][10:45<45:48,42.95s/it][11:28<44:48,42.68s/it][12:11<44:29,43.05s/it][12:53<43:27,42.75s/it][13:35<42:20,42.35s/it][14:18<41:58,42.69s/it][15:01<41:07,42.54s/it][15:43<40:30,42.64s/it][16:26<39:40,42.51s/it][17:08<38:59,42.54s/it][17:51<38:14,42.48s/it][18:33<37:32,42.51s/it][19:16<36:53,42.57s/it][20:00<36:32,42.99s/it][20:42<35:37,42.75s/it][21:24<34:48,42.62s/it][22:08<34:18,42.88s/it][22:51<33:36,42.91s/it][23:32<32:36,42.52s/it][24:15<31:54,42.55s/it][24:58<31:12,42.56s/it][25:41<30:41,42.82s/it][26:22<29:38,42.34s/it][27:04<28:51,42.23s/it][27:46<28:04,42.12s/it][28:27<27:13,41.89s/it][29:10<26:40,42.11s/it][29:53<26:07,42.35s/it][30:34<25:11,41.98s/it][31:16<24:29,41.98s/it][31:59<23:53,42.16s/it][32:42<23:20,42.43s/it][33:26<22:52,42.88s/it][34:09<22:16,43.11s/it][34:51<21:23,42.80s/it][35:34<20:40,42.76s/it][36:16<19:51,42.55s/it][36:59<19:12,42.67s/it][37:41<18:23,42.45s/it][38:24<17:44,42.56s/it][39:07<17:06,42.79s/it][39:51<16:31,43.09s/it][40:34<15:44,42.94s/it][41:18<15:13,43.49s/it][42:02<14:33,43.68s/it][42:46<13:49,43.65s/it][43:29<13:00,43.35s/it][44:13<12:20,43.54s/it][44:56<11:34,43.40s/it][45:39<10:50,43.37s/it][46:21<10:01,42.99s/it][47:04<09:19,43.01s/it][47:45<08:29,42.50s/it][48:27<07:42,42.07s/it][49:10<07:04,42.45s/it][49:51<06:18,42.03s/it][50:36<05:42,42.81s/it][51:18<04:58,42.69s/it][52:00<04:14,42.44s/it][52:43<03:33,42.66s/it][53:27<02:51,42.95s/it][54:08<02:07,42.37s/it][54:41<01:19,39.76s/it][55:25<00:40,40.95s/it][55:57<00:00,38.29s/it][55:57<00:00,42.50s/it][2025/03/31 04:00:19] - autoattack - Run 79: Accuracy: 0.8890

[00:00<?,?it/s][00:43<56:15,43.28s/it][01:25<54:31,42.49s/it][02:07<53:37,42.34s/it][02:49<52:59,42.40s/it][03:32<52:36,42.65s/it][04:15<51:38,42.45s/it][04:58<51:22,42.81s/it][05:40<50:20,42.55s/it][06:22<49:29,42.42s/it][07:05<48:46,42.42s/it][07:48<48:32,42.83s/it][08:32<48:11,43.16s/it][09:16<47:33,43.24s/it][10:00<47:10,43.54s/it][10:44<46:27,43.55s/it][11:26<45:22,43.21s/it][12:08<44:23,42.96s/it][12:50<43:22,42.66s/it][13:31<42:09,42.16s/it][14:14<41:32,42.24s/it][14:56<40:51,42.27s/it][15:38<40:03,42.17s/it][16:19<38:59,41.77s/it][17:02<38:44,42.26s/it][17:45<38:03,42.29s/it][18:27<37:16,42.20s/it][19:09<36:37,42.26s/it][19:51<35:51,42.18s/it][20:33<35:13,42.28s/it][21:16<34:32,42.29s/it][21:58<33:49,42.27s/it][22:42<33:23,42.64s/it][23:25<32:45,42.74s/it][24:07<32:04,42.77s/it][24:50<31:23,42.80s/it][25:33<30:35,42.69s/it][26:15<29:42,42.44s/it][26:57<28:56,42.34s/it][27:39<28:12,42.31s/it][28:22<27:36,42.47s/it][29:02<26:31,41.89s/it][29:46<26:07,42.36s/it][30:29<25:34,42.64s/it][31:09<24:29,41.98s/it][31:52<23:53,42.16s/it][32:34<23:07,42.04s/it][33:17<22:36,42.40s/it][33:59<21:53,42.36s/it][34:42<21:14,42.49s/it][35:25<20:34,42.57s/it][36:07<19:47,42.41s/it][36:51<19:19,42.96s/it][37:33<18:25,42.51s/it][38:16<17:48,42.73s/it][38:59<17:10,42.95s/it][39:42<16:28,42.96s/it][40:25<15:46,43.01s/it][41:10<15:12,43.45s/it][41:53<14:25,43.30s/it][42:36<13:40,43.21s/it][43:20<13:02,43.50s/it][44:03<12:17,43.37s/it][44:45<11:27,42.97s/it][45:27<10:40,42.73s/it][46:09<09:54,42.47s/it][46:51<09:11,42.44s/it][47:34<08:29,42.47s/it][48:16<07:44,42.19s/it][48:57<07:00,42.07s/it][49:40<06:19,42.20s/it][50:24<05:42,42.86s/it][51:06<04:56,42.37s/it][51:48<04:14,42.46s/it][52:31<03:33,42.72s/it][53:08<02:43,40.93s/it][53:47<02:00,40.24s/it][54:30<01:22,41.07s/it][55:12<00:41,41.38s/it][55:44<00:00,38.51s/it][55:44<00:00,42.33s/it][2025/03/31 04:56:03] - autoattack - Run 79: Accuracy: 0.8883

[00:00<?,?it/s][00:42<54:36,42.00s/it][01:25<54:49,42.72s/it][02:09<55:10,43.56s/it][02:52<54:16,43.41s/it][03:59<1:03:58,51.87s/it][04:44<1:00:12,49.48s/it][05:27<56:43,47.27s/it]  [06:09<53:52,45.53s/it][06:56<53:36,45.95s/it][07:38<51:41,44.95s/it][08:25<51:27,45.40s/it][09:09<50:24,45.14s/it][09:56<50:05,45.54s/it][10:39<48:33,44.82s/it][11:21<46:54,43.98s/it][12:05<46:13,44.02s/it][12:48<45:04,43.63s/it][13:31<44:20,43.61s/it][14:40<51:13,51.22s/it][16:02<59:26,60.44s/it][16:44<53:02,54.87s/it][17:27<48:41,51.26s/it][18:08<44:58,48.18s/it][18:49<42:18,46.15s/it][19:44<43:47,48.66s/it][21:16<54:25,61.62s/it][21:59<48:45,56.26s/it][22:41<44:11,51.98s/it][23:24<40:59,49.19s/it][25:09<53:49,65.91s/it][25:52<47:12,59.02s/it][26:34<42:15,53.96s/it][27:16<38:28,50.19s/it][27:58<35:53,47.85s/it][28:40<33:52,46.20s/it][29:23<32:18,45.09s/it][30:05<30:59,44.28s/it][30:47<29:48,43.63s/it][31:30<28:57,43.43s/it][32:12<27:56,42.97s/it][32:54<27:04,42.75s/it][33:37<26:19,42.69s/it][34:21<25:48,43.02s/it][35:02<24:46,42.47s/it][35:43<23:55,42.21s/it][36:27<23:25,42.59s/it][37:10<22:48,42.75s/it][37:52<21:55,42.44s/it][38:34<21:11,42.39s/it][39:16<20:28,42.35s/it][39:59<19:45,42.35s/it][40:41<19:02,42.32s/it][41:24<18:23,42.43s/it][42:07<17:45,42.61s/it][42:50<17:08,42.86s/it][43:32<16:22,42.70s/it][44:16<15:48,43.09s/it][45:00<15:05,43.11s/it][45:44<14:29,43.45s/it][46:28<13:50,43.73s/it][47:13<13:14,44.14s/it][47:56<12:23,43.73s/it][48:38<11:29,43.08s/it][49:20<10:45,43.00s/it][50:03<10:00,42.87s/it][50:47<09:21,43.22s/it][51:28<08:30,42.53s/it][52:11<07:48,42.56s/it][52:52<07:03,42.35s/it][53:33<06:16,41.88s/it][54:16<05:37,42.20s/it][55:00<04:59,42.81s/it][55:42<04:13,42.32s/it][56:13<03:14,38.90s/it][56:34<02:15,33.79s/it][56:57<01:31,30.41s/it][57:20<00:56,28.16s/it][57:43<00:26,26.56s/it][58:00<00:00,23.89s/it][58:00<00:00,44.06s/it][2025/03/31 05:54:04] - autoattack - Run 79: Accuracy: 0.8875
[2025/03/31 05:54:04] - autoattack Mean: 0.8883, Std: 0.0006
[2025/03/31 05:54:04] - Testing done.

wandb: - 0.005 MB of 0.005 MB uploadedwandb: \ 0.005 MB of 0.016 MB uploadedwandb: | 0.005 MB of 0.023 MB uploadedwandb: / 0.016 MB of 0.023 MB uploadedwandb: - 0.016 MB of 0.023 MB uploadedwandb: \ 0.016 MB of 0.023 MB uploadedwandb: | 0.016 MB of 0.023 MB uploadedwandb: / 0.023 MB of 0.023 MB uploadedwandb: 
wandb: Run history:
wandb:     Nature Acc Mean ‚ñÅ
wandb:      Nature Acc Std ‚ñÅ
wandb: autoattack_mean_adv ‚ñÅ
wandb:  autoattack_std_adv ‚ñÅ
wandb:        pgd_mean_adv ‚ñÅ
wandb:         pgd_std_adv ‚ñÅ
wandb: 
wandb: Run summary:
wandb:     Nature Acc Mean 0.91427
wandb:      Nature Acc Std 0.0004
wandb: autoattack_mean_adv 0.88827
wandb:  autoattack_std_adv 0.00061
wandb:        pgd_mean_adv 0.88393
wandb:         pgd_std_adv 0.00031
wandb: 
wandb: üöÄ View run glad-totem-15 at: https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-stlmnist/runs/675yct2g
wandb: Ô∏è‚ö° View job at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-stlmnist/jobs/QXJ0aWZhY3RDb2xsZWN0aW9uOjU5NDE0Njg5OQ==/version_details/v3
wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20250331_030315-675yct2g/logs
Exception in thread NetStatThr:
Exception in thread IntMsgThr:
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/threading.py", line 973, in _bootstrap_inner
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/threading.py", line 973, in _bootstrap_inner
    self.run()
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/threading.py", line 910, in run
    self._target(*self._args, **self._kwargs)
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/wandb_run.py", line 300, in check_internal_messages
    self.run()
    self._loop_check_status(
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/threading.py", line 910, in run
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/wandb_run.py", line 224, in _loop_check_status
    self._target(*self._args, **self._kwargs)
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/wandb_run.py", line 268, in check_network_status
    local_handle = request()
    self._loop_check_status(
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/interface/interface.py", line 800, in deliver_internal_messages
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/wandb_run.py", line 224, in _loop_check_status
    return self._deliver_internal_messages(internal_message)
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/interface/interface_shared.py", line 506, in _deliver_internal_messages
    return self._deliver_record(record)
    local_handle = request()
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/interface/interface_shared.py", line 449, in _deliver_record
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/interface/interface.py", line 792, in deliver_network_status
    handle = mailbox._deliver_record(record, interface=self)
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/lib/mailbox.py", line 455, in _deliver_record
    return self._deliver_network_status(status)
    interface._publish(record)
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/interface/interface_shared.py", line 500, in _deliver_network_status
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/interface/interface_sock.py", line 51, in _publish
    self._sock_client.send_record_publish(record)
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/lib/sock_client.py", line 221, in send_record_publish
    return self._deliver_record(record)
    self.send_server_request(server_req)
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/interface/interface_shared.py", line 449, in _deliver_record
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/lib/sock_client.py", line 155, in send_server_request
    handle = mailbox._deliver_record(record, interface=self)
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/lib/mailbox.py", line 455, in _deliver_record
    self._send_message(msg)
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/lib/sock_client.py", line 152, in _send_message
    self._sendall_with_error_handle(header + data)
    interface._publish(record)
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/lib/sock_client.py", line 130, in _sendall_with_error_handle
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/interface/interface_sock.py", line 51, in _publish
    sent = self._sock.send(data)
    self._sock_client.send_record_publish(record)
BrokenPipeError: [Errno 32] Broken pipe
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/lib/sock_client.py", line 221, in send_record_publish
    self.send_server_request(server_req)
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/lib/sock_client.py", line 155, in send_server_request
    self._send_message(msg)
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/lib/sock_client.py", line 152, in _send_message
    self._sendall_with_error_handle(header + data)
  File "/home/yxma/anaconda3/envs/py39_torch/lib/python3.9/site-packages/wandb/sdk/lib/sock_client.py", line 130, in _sendall_with_error_handle
    sent = self._sock.send(data)
BrokenPipeError: [Errno 32] Broken pipe
