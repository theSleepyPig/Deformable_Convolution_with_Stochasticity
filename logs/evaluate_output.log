nohup: ignoring input
wandb: Currently logged in as: xuanzhu_07 (xuanzhu_07-university-of-sydney). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.18.1 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.5
wandb: Run data is saved locally in /home/yxma/hzx/hzx/rand_defence/wandb/run-20240920_200349-4e07g16v
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run silver-wood-23
wandb: ‚≠êÔ∏è View project at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-heihe
wandb: üöÄ View run at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-heihe/runs/4e07g16v
[2024/09/20 20:03:51] - Namespace(batch_size=128, data_dir='~/datasets/CIFAR10/', dataset='cifar10', epochs=200, network='ResNet18', worker=4, lr_schedule='multistep', lr_min=0.0, lr_max=0.1, weight_decay=0.0005, momentum=0.9, none_random_training=True, rand_deform_training=False, randpos_deform_training=True, randpos_multi_deform_training=False, is_n_repeat=False, only_adv_randpos_training=False, rand_path_training=False, epsilon=8, alpha=2, c=0.0001, steps=1000, seed=0, attack_iters=20, restarts=1, save_dir='logs/ResNet18_DeformableConvolution', pretrain='/home/yxma/hzx/hzx/rand_defence/ckpt/cifar10/ResNet18/ckpt/model_20240914015043.pth', continue_training=False, lb=2048, pos=0, eot=False, hang=False, device=2)
[2024/09/20 20:03:51] - Dataset: cifar10
[2024/09/20 20:03:53] - Evaluating with standard images with random mask...
Process ID: 3159897
Pretrain model path: /home/yxma/hzx/hzx/rand_defence/ckpt/cifar10/ResNet18/ckpt/model_20240914015043.pth
Does pretrain model path exist? True
Files already downloaded and verified
Files already downloaded and verified
ResNetPartmask5(
  (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layer1): ModuleList(
    (0): RandonBasicBlock(
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): MaskedConv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer11): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer2): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer3): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer4): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (linear): Linear(in_features=512, out_features=10, bias=True)
  (normalize): NormalizeByChannelMeanStd(mean=tensor([0.4914, 0.4822, 0.4465], device='cuda:2'), std=tensor([0.2471, 0.2435, 0.2616], device='cuda:2'))
)
Different keys:
normalize.mean
normalize.std
[2024/09/20 20:03:54] - Nature Acc: 0.8177 	
tensor([[[[0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 1., 1.],
          [0., 0., 0., 0., 1.],
          [0., 0., 1., 0., 0.]]],


        [[[0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 1., 1.],
          [0., 0., 0., 0., 1.],
          [0., 0., 1., 0., 0.]]],


        [[[0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 1., 1.],
          [0., 0., 0., 0., 1.],
          [0., 0., 1., 0., 0.]]],


        ...,


        [[[0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 1., 1.],
          [0., 0., 0., 0., 1.],
          [0., 0., 1., 0., 0.]]],


        [[[0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 1., 1.],
          [0., 0., 0., 0., 1.],
          [0., 0., 1., 0., 0.]]],


        [[[0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 1., 1.],
          [0., 0., 0., 0., 1.],
          [0., 0., 1., 0., 0.]]]], device='cuda:2')
PGD attacking
[00:00<?,?it/s][00:00<00:24, 3.20it/s][00:00<00:23, 3.32it/s][00:00<00:22, 3.36it/s][00:01<00:22, 3.38it/s][00:01<00:21, 3.39it/s][00:01<00:21, 3.40it/s][00:02<00:21, 3.40it/s][00:02<00:20, 3.40it/s][00:02<00:20, 3.41it/s][00:02<00:20, 3.41it/s][00:03<00:19, 3.41it/s][00:03<00:19, 3.41it/s][00:03<00:19, 3.41it/s][00:04<00:19, 3.41it/s][00:04<00:18, 3.41it/s][00:04<00:18, 3.41it/s][00:05<00:18, 3.41it/s][00:05<00:17, 3.41it/s][00:05<00:17, 3.41it/s][00:05<00:17, 3.41it/s][00:06<00:17, 3.41it/s][00:06<00:16, 3.41it/s][00:06<00:16, 3.41it/s][00:07<00:16, 3.41it/s][00:07<00:15, 3.41it/s][00:07<00:15, 3.41it/s][00:07<00:15, 3.41it/s][00:08<00:14, 3.41it/s][00:08<00:14, 3.41it/s][00:08<00:14, 3.41it/s][00:09<00:14, 3.41it/s][00:09<00:13, 3.41it/s][00:09<00:13, 3.41it/s][00:09<00:13, 3.41it/s][00:10<00:12, 3.41it/s][00:10<00:12, 3.41it/s][00:10<00:12, 3.41it/s][00:11<00:12, 3.41it/s][00:11<00:11, 3.41it/s][00:11<00:11, 3.41it/s][00:12<00:11, 3.41it/s][00:12<00:10, 3.41it/s][00:12<00:10, 3.41it/s][00:12<00:10, 3.41it/s][00:13<00:09, 3.41it/s][00:13<00:09, 3.41it/s][00:13<00:09, 3.41it/s][00:14<00:09, 3.41it/s][00:14<00:08, 3.41it/s][00:14<00:08, 3.41it/s][00:14<00:08, 3.41it/s][00:15<00:07, 3.41it/s][00:15<00:07, 3.41it/s][00:15<00:07, 3.41it/s][00:16<00:07, 3.41it/s][00:16<00:06, 3.41it/s][00:16<00:06, 3.41it/s][00:17<00:06, 3.41it/s][00:17<00:05, 3.41it/s][00:17<00:05, 3.41it/s][00:17<00:05, 3.41it/s][00:18<00:04, 3.41it/s][00:18<00:04, 3.41it/s][00:18<00:04, 3.41it/s][00:19<00:04, 3.41it/s][00:19<00:03, 3.41it/s][00:19<00:03, 3.41it/s][00:19<00:03, 3.41it/s][00:20<00:02, 3.41it/s][00:20<00:02, 3.41it/s][00:20<00:02, 3.41it/s][00:21<00:02, 3.41it/s][00:21<00:01, 3.41it/s][00:21<00:01, 3.41it/s][00:22<00:01, 3.41it/s][00:22<00:00, 3.41it/s][00:22<00:00, 3.41it/s][00:22<00:00, 3.41it/s][00:22<00:00, 4.22it/s][00:22<00:00, 3.44it/s][2024/09/20 20:04:17] - pgd
[2024/09/20 20:04:17] - adv: 0.5468 	
[2024/09/20 20:04:17] - PGD Acc: 0.5468 	

FGSM attacking
[00:00<?,?it/s][00:00<00:02,37.13it/s][00:00<00:01,42.64it/s][00:00<00:01,44.42it/s][00:00<00:01,45.20it/s][00:00<00:01,45.70it/s][00:00<00:01,45.95it/s][00:00<00:00,46.17it/s][00:00<00:00,46.35it/s][00:00<00:00,46.45it/s][00:01<00:00,46.50it/s][00:01<00:00,46.62it/s][00:01<00:00,46.67it/s][00:01<00:00,46.60it/s][00:01<00:00,46.64it/s][00:01<00:00,46.83it/s][00:01<00:00,46.44it/s][2024/09/20 20:04:19] - fgsm
[2024/09/20 20:04:19] - adv: 0.5733 	

MIFGSM attacking
[00:00<?,?it/s][00:00<00:08, 9.71it/s][00:00<00:06,11.77it/s][00:00<00:06,12.24it/s][00:00<00:05,12.45it/s][00:00<00:05,12.55it/s][00:00<00:05,12.62it/s][00:01<00:05,12.66it/s][00:01<00:05,12.67it/s][00:01<00:04,12.68it/s][00:01<00:04,12.70it/s][00:01<00:04,12.71it/s][00:01<00:04,12.72it/s][00:01<00:04,12.72it/s][00:02<00:04,12.73it/s][00:02<00:03,12.73it/s][00:02<00:03,12.72it/s][00:02<00:03,12.72it/s][00:02<00:03,12.72it/s][00:02<00:03,12.72it/s][00:03<00:03,12.73it/s][00:03<00:02,12.73it/s][00:03<00:02,12.73it/s][00:03<00:02,12.74it/s][00:03<00:02,12.74it/s][00:03<00:02,12.74it/s][00:04<00:02,12.74it/s][00:04<00:02,12.73it/s][00:04<00:01,12.73it/s][00:04<00:01,12.73it/s][00:04<00:01,12.73it/s][00:04<00:01,12.74it/s][00:04<00:01,12.74it/s][00:05<00:01,12.73it/s][00:05<00:00,12.71it/s][00:05<00:00,12.71it/s][00:05<00:00,12.72it/s][00:05<00:00,12.72it/s][00:05<00:00,12.73it/s][00:06<00:00,12.74it/s][00:06<00:00,12.80it/s][2024/09/20 20:04:26] - mifgsm
[2024/09/20 20:04:26] - adv: 0.5502 	

Deepfool attacking
[00:00<?,?it/s][00:06<08:35, 6.61s/it][00:15<10:14, 7.99s/it][00:24<10:32, 8.33s/it][00:32<10:11, 8.15s/it][00:39<09:28, 7.69s/it][00:44<08:38, 7.10s/it][00:53<08:58, 7.48s/it][01:02<09:21, 7.91s/it][01:09<09:06, 7.80s/it][01:17<09:01, 7.84s/it][01:26<09:10, 8.10s/it][01:35<09:20, 8.36s/it][01:42<08:56, 8.13s/it][01:51<08:56, 8.25s/it][02:00<09:03, 8.50s/it][02:07<08:31, 8.11s/it][02:16<08:35, 8.32s/it][02:26<09:03, 8.91s/it][02:33<08:17, 8.29s/it][02:41<07:57, 8.09s/it][02:48<07:39, 7.93s/it][02:57<07:42, 8.11s/it][03:05<07:40, 8.23s/it][03:14<07:38, 8.34s/it][03:23<07:41, 8.55s/it][03:31<07:18, 8.26s/it][03:38<07:03, 8.15s/it][03:46<06:43, 7.92s/it][03:55<06:51, 8.24s/it][04:06<07:32, 9.24s/it][04:16<07:27, 9.32s/it][04:24<07:07, 9.09s/it][04:32<06:42, 8.76s/it][04:41<06:34, 8.76s/it][04:52<06:48, 9.29s/it][04:59<06:15, 8.73s/it][05:07<06:00, 8.57s/it][05:16<05:48, 8.51s/it][05:23<05:24, 8.10s/it][05:30<05:07, 7.89s/it][05:39<05:10, 8.18s/it][05:48<05:12, 8.45s/it][05:57<05:10, 8.64s/it][06:06<05:05, 8.72s/it][06:14<04:51, 8.57s/it][06:22<04:31, 8.24s/it][06:29<04:09, 7.81s/it][06:39<04:22, 8.48s/it][06:47<04:08, 8.28s/it][06:56<04:08, 8.57s/it][07:03<03:49, 8.19s/it][07:11<03:39, 8.14s/it][07:19<03:29, 8.04s/it][07:26<03:14, 7.78s/it][07:35<03:15, 8.15s/it][07:43<03:03, 7.98s/it][07:51<02:58, 8.11s/it][08:00<02:53, 8.28s/it][08:09<02:49, 8.47s/it][08:17<02:41, 8.47s/it][08:26<02:37, 8.73s/it][08:34<02:24, 8.48s/it][08:43<02:14, 8.39s/it][08:51<02:07, 8.51s/it][09:00<01:58, 8.48s/it][09:08<01:49, 8.43s/it][09:16<01:38, 8.17s/it][09:25<01:32, 8.45s/it][09:34<01:25, 8.58s/it][09:42<01:16, 8.47s/it][09:50<01:07, 8.48s/it][09:58<00:56, 8.14s/it][10:07<00:50, 8.42s/it][10:15<00:41, 8.33s/it][10:27<00:37, 9.39s/it][10:34<00:26, 8.83s/it][10:43<00:17, 8.86s/it][10:52<00:08, 8.87s/it][10:53<00:00, 6.59s/it][10:53<00:00, 8.28s/it][2024/09/20 20:15:20] - deepfool
[2024/09/20 20:15:20] - adv: 0.7003 	

EOTPGD attacking
[00:00<?,?it/s][00:00<00:46, 1.67it/s][00:01<00:45, 1.70it/s][00:01<00:44, 1.71it/s][00:02<00:43, 1.72it/s][00:02<00:42, 1.72it/s][00:03<00:42, 1.72it/s][00:04<00:41, 1.72it/s][00:04<00:41, 1.72it/s][00:05<00:40, 1.72it/s][00:05<00:39, 1.73it/s][00:06<00:39, 1.73it/s][00:06<00:38, 1.73it/s][00:07<00:38, 1.73it/s][00:08<00:37, 1.73it/s][00:08<00:37, 1.73it/s][00:09<00:36, 1.73it/s][00:09<00:35, 1.73it/s][00:10<00:35, 1.73it/s][00:11<00:34, 1.73it/s][00:11<00:34, 1.73it/s][00:12<00:33, 1.73it/s][00:12<00:33, 1.73it/s][00:13<00:32, 1.73it/s][00:13<00:31, 1.73it/s][00:14<00:31, 1.73it/s][00:15<00:30, 1.72it/s][00:15<00:30, 1.72it/s][00:16<00:29, 1.72it/s][00:16<00:28, 1.73it/s][00:17<00:28, 1.72it/s][00:17<00:27, 1.72it/s][00:18<00:27, 1.72it/s][00:19<00:26, 1.72it/s][00:19<00:26, 1.72it/s][00:20<00:25, 1.72it/s][00:20<00:24, 1.72it/s][00:21<00:24, 1.72it/s][00:22<00:23, 1.73it/s][00:22<00:23, 1.72it/s][00:23<00:22, 1.73it/s][00:23<00:22, 1.72it/s][00:24<00:21, 1.73it/s][00:24<00:20, 1.72it/s][00:25<00:20, 1.72it/s][00:26<00:19, 1.72it/s][00:26<00:19, 1.72it/s][00:27<00:18, 1.72it/s][00:27<00:17, 1.72it/s][00:28<00:17, 1.72it/s][00:28<00:16, 1.72it/s][00:29<00:16, 1.72it/s][00:30<00:15, 1.73it/s][00:30<00:15, 1.73it/s][00:31<00:14, 1.72it/s][00:31<00:13, 1.72it/s][00:32<00:13, 1.72it/s][00:33<00:12, 1.72it/s][00:33<00:12, 1.73it/s][00:34<00:11, 1.72it/s][00:34<00:11, 1.73it/s][00:35<00:10, 1.73it/s][00:35<00:09, 1.72it/s][00:36<00:09, 1.73it/s][00:37<00:08, 1.73it/s][00:37<00:08, 1.73it/s][00:38<00:07, 1.72it/s][00:38<00:06, 1.72it/s][00:39<00:06, 1.72it/s][00:40<00:05, 1.72it/s][00:40<00:05, 1.72it/s][00:41<00:04, 1.72it/s][00:41<00:04, 1.72it/s][00:42<00:03, 1.72it/s][00:42<00:02, 1.72it/s][00:43<00:02, 1.72it/s][00:44<00:01, 1.72it/s][00:44<00:01, 1.72it/s][00:45<00:00, 1.72it/s][00:45<00:00, 2.16it/s][00:45<00:00, 1.74it/s][2024/09/20 20:16:05] - eotpgd
[2024/09/20 20:16:05] - adv: 0.5521 	

CW12 attacking
[00:00<?,?it/s][00:02<02:54, 2.23s/it][00:04<02:50, 2.21s/it][00:06<02:47, 2.21s/it][00:08<02:45, 2.20s/it][00:11<02:42, 2.20s/it][00:13<02:40, 2.20s/it][00:15<02:38, 2.19s/it][00:17<02:35, 2.19s/it][00:19<02:33, 2.19s/it][00:21<02:31, 2.19s/it][00:24<02:29, 2.19s/it][00:26<02:26, 2.19s/it][00:28<02:24, 2.19s/it][00:30<02:22, 2.19s/it][00:32<02:20, 2.19s/it][00:35<02:18, 2.19s/it][00:37<02:15, 2.19s/it][00:39<02:13, 2.19s/it][00:41<02:11, 2.19s/it][00:43<02:09, 2.19s/it][00:46<02:07, 2.19s/it][00:48<02:05, 2.20s/it][00:50<02:03, 2.20s/it][00:52<02:00, 2.20s/it][00:54<01:58, 2.20s/it][00:57<01:56, 2.20s/it][00:59<01:54, 2.19s/it][01:01<01:51, 2.19s/it][01:03<01:49, 2.19s/it][01:05<01:47, 2.19s/it][01:08<01:45, 2.20s/it][01:10<01:43, 2.20s/it][01:12<01:41, 2.20s/it][01:14<01:38, 2.20s/it][01:16<01:36, 2.20s/it][01:19<01:34, 2.20s/it][01:21<01:32, 2.20s/it][01:23<01:30, 2.20s/it][01:25<01:27, 2.20s/it][01:27<01:25, 2.20s/it][01:30<01:23, 2.20s/it][01:32<01:21, 2.20s/it][01:34<01:19, 2.20s/it][01:36<01:16, 2.20s/it][01:38<01:14, 2.20s/it][01:41<01:12, 2.20s/it][01:43<01:10, 2.20s/it][01:45<01:08, 2.20s/it][01:47<01:05, 2.20s/it][01:49<01:03, 2.20s/it][01:52<01:01, 2.20s/it][01:54<00:59, 2.20s/it][01:56<00:57, 2.20s/it][01:58<00:54, 2.20s/it][02:00<00:52, 2.20s/it][02:02<00:50, 2.20s/it][02:05<00:48, 2.20s/it][02:07<00:46, 2.20s/it][02:09<00:43, 2.20s/it][02:11<00:41, 2.20s/it][02:13<00:39, 2.20s/it][02:16<00:37, 2.20s/it][02:18<00:35, 2.20s/it][02:20<00:32, 2.20s/it][02:22<00:30, 2.20s/it][02:24<00:28, 2.20s/it][02:27<00:26, 2.20s/it][02:29<00:24, 2.20s/it][02:31<00:21, 2.20s/it][02:33<00:19, 2.20s/it][02:35<00:17, 2.20s/it][02:38<00:15, 2.20s/it][02:40<00:13, 2.20s/it][02:42<00:10, 2.20s/it][02:44<00:08, 2.20s/it][02:46<00:06, 2.20s/it][02:49<00:04, 2.19s/it][02:51<00:02, 2.20s/it][02:52<00:00, 1.76s/it][02:52<00:00, 2.18s/it][2024/09/20 20:18:57] - cwl2
[2024/09/20 20:18:57] - adv: 0.8061 	

AA attacking
[00:00<?,?it/s][00:21<27:44,21.34s/it][00:43<28:06,21.90s/it][01:05<27:43,21.89s/it][01:27<27:18,21.85s/it][01:49<26:53,21.80s/it][02:05<24:21,20.02s/it][02:22<22:40,18.90s/it][02:44<23:39,19.99s/it][03:01<22:04,18.92s/it][03:23<22:51,19.87s/it][03:47<23:59,21.17s/it][04:08<23:51,21.36s/it][04:30<23:30,21.37s/it][04:52<23:27,21.66s/it][05:09<21:27,20.12s/it][05:25<20:00,19.05s/it][05:48<20:44,20.08s/it][06:04<19:15,18.95s/it][06:19<17:41,17.69s/it][06:35<17:03,17.35s/it][06:52<16:30,17.07s/it][07:14<17:32,18.47s/it][07:36<18:17,19.60s/it][07:52<17:05,18.64s/it][08:14<17:32,19.49s/it][08:30<16:27,18.64s/it][08:53<17:04,19.70s/it][09:09<15:54,18.71s/it][09:31<16:25,19.70s/it][09:53<16:38,20.38s/it][10:14<16:34,20.72s/it][10:36<16:31,21.10s/it][10:53<15:10,19.78s/it][11:15<15:15,20.34s/it][11:37<15:20,20.93s/it][11:58<15:04,21.04s/it][12:15<13:46,19.69s/it][12:38<14:05,20.63s/it][12:59<13:53,20.84s/it][13:18<13:06,20.18s/it][13:32<11:42,18.48s/it][13:54<12:00,19.47s/it][14:16<12:05,20.16s/it][14:38<12:02,20.65s/it][14:59<11:54,21.00s/it][15:16<10:45,19.57s/it][15:37<10:44,20.13s/it][15:59<10:39,20.64s/it][16:22<10:38,21.28s/it][16:44<10:27,21.64s/it][17:00<09:20,20.01s/it][17:22<09:11,20.44s/it][17:43<09:01,20.83s/it][18:01<08:15,19.83s/it][18:23<08:08,20.35s/it][18:45<08:03,21.03s/it][19:00<07:02,19.19s/it][19:17<06:25,18.37s/it][19:39<06:29,19.47s/it][20:00<06:23,20.16s/it][20:17<05:41,19.00s/it][20:38<05:33,19.62s/it][21:00<05:26,20.39s/it][21:22<05:12,20.84s/it][21:44<04:56,21.17s/it][21:58<04:10,19.26s/it][22:20<04:00,20.06s/it][22:42<03:45,20.48s/it][22:57<03:07,18.77s/it][23:13<02:43,18.11s/it][23:36<02:35,19.39s/it][23:52<02:09,18.56s/it][24:14<01:57,19.56s/it][24:36<01:41,20.25s/it][24:58<01:23,20.81s/it][25:20<01:03,21.08s/it][25:38<00:40,20.34s/it][26:01<00:20,20.98s/it][26:15<00:00,19.01s/it][26:15<00:00,19.95s/it][2024/09/20 20:45:13] - autoattack
[2024/09/20 20:45:13] - adv: 0.5904 	

Pixel attacking
[00:00<?,?it/s][00:04<06:26, 4.96s/it][00:10<06:36, 5.15s/it][00:15<06:33, 5.18s/it][00:20<06:32, 5.24s/it][00:26<06:29, 5.26s/it][00:30<06:14, 5.13s/it][00:35<06:06, 5.08s/it][00:40<05:58, 5.04s/it][00:45<05:52, 5.03s/it][00:50<05:44, 4.99s/it][00:55<05:40, 5.01s/it][01:01<05:41, 5.09s/it][01:06<05:39, 5.15s/it][01:11<05:32, 5.11s/it][01:16<05:27, 5.12s/it][01:21<05:15, 5.01s/it][01:26<05:09, 4.99s/it][01:31<05:10, 5.08s/it][01:36<05:06, 5.11s/it][01:41<04:57, 5.04s/it][01:46<04:48, 4.98s/it][01:51<04:43, 4.98s/it][01:56<04:45, 5.11s/it][02:01<04:38, 5.06s/it][02:06<04:29, 4.99s/it][02:11<04:26, 5.03s/it][02:16<04:17, 4.96s/it][02:21<04:13, 4.97s/it][02:26<04:08, 4.96s/it][02:31<04:05, 5.02s/it][02:36<04:01, 5.04s/it][02:41<03:58, 5.07s/it][02:47<03:55, 5.13s/it][02:52<03:48, 5.08s/it][02:57<03:48, 5.20s/it][03:02<03:41, 5.16s/it][03:07<03:37, 5.17s/it][03:13<03:31, 5.17s/it][03:18<03:26, 5.16s/it][03:22<03:16, 5.03s/it][03:27<03:09, 5.00s/it][03:33<03:09, 5.13s/it][03:38<03:03, 5.10s/it][03:43<02:57, 5.08s/it][03:47<02:46, 4.89s/it][03:52<02:41, 4.88s/it][03:57<02:32, 4.75s/it][04:01<02:25, 4.69s/it][04:06<02:20, 4.69s/it][04:11<02:24, 4.98s/it][04:16<02:11, 4.70s/it][04:21<02:11, 4.88s/it][04:26<02:07, 4.91s/it][04:31<02:04, 4.98s/it][04:36<01:59, 4.99s/it][04:41<01:55, 5.03s/it][04:46<01:50, 5.03s/it][04:51<01:44, 5.00s/it][04:56<01:40, 5.03s/it][05:01<01:33, 4.94s/it][05:06<01:29, 4.98s/it][05:11<01:24, 4.98s/it][05:16<01:21, 5.07s/it][05:21<01:15, 5.02s/it][05:26<01:10, 5.05s/it][05:31<01:05, 5.06s/it][05:36<00:59, 4.94s/it][05:41<00:55, 5.03s/it][05:46<00:50, 5.10s/it][05:52<00:46, 5.12s/it][05:57<00:40, 5.11s/it][06:02<00:36, 5.15s/it][06:06<00:29, 4.85s/it][06:11<00:24, 4.89s/it][06:16<00:19, 4.89s/it][06:21<00:15, 5.01s/it][06:25<00:09, 4.65s/it][06:30<00:04, 4.75s/it][06:31<00:00, 3.53s/it][06:31<00:00, 4.95s/it][2024/09/20 20:51:45] - pixel
[2024/09/20 20:51:45] - adv: 0.7776 	

Square attacking
[00:00<?,?it/s][00:20<26:17,20.22s/it][00:40<26:09,20.38s/it][01:01<26:06,20.61s/it][01:21<25:36,20.49s/it][01:42<25:27,20.64s/it][02:03<24:57,20.52s/it][02:23<24:24,20.34s/it][02:43<24:08,20.40s/it][03:04<23:51,20.44s/it][03:24<23:25,20.37s/it][03:44<22:58,20.28s/it][04:05<23:02,20.63s/it][04:26<22:33,20.50s/it][04:45<21:56,20.25s/it][05:06<21:44,20.38s/it][05:25<20:57,19.96s/it][05:45<20:33,19.90s/it][06:06<20:47,20.46s/it][06:26<20:14,20.24s/it][06:44<19:11,19.52s/it][07:04<19:01,19.68s/it][07:24<18:50,19.84s/it][07:44<18:33,19.89s/it][08:04<18:16,19.93s/it][08:24<17:50,19.82s/it][08:44<17:37,19.95s/it][09:05<17:25,20.10s/it][09:25<17:03,20.06s/it][09:45<16:47,20.15s/it][10:05<16:26,20.13s/it][10:25<16:10,20.21s/it][10:46<15:58,20.40s/it][11:07<15:41,20.46s/it][11:26<15:10,20.23s/it][11:47<14:47,20.16s/it][12:06<14:23,20.09s/it][12:27<14:12,20.29s/it][12:50<14:22,21.04s/it][13:10<13:53,20.84s/it][13:31<13:31,20.80s/it][13:52<13:07,20.73s/it][14:12<12:46,20.72s/it][14:33<12:24,20.69s/it][14:53<12:01,20.61s/it][15:13<11:32,20.37s/it][15:33<11:09,20.29s/it][15:53<10:48,20.27s/it][16:14<10:26,20.20s/it][16:33<10:03,20.13s/it][16:55<09:57,20.60s/it][17:15<09:30,20.39s/it][17:35<09:09,20.35s/it][17:55<08:46,20.24s/it][18:16<08:29,20.40s/it][18:36<08:05,20.23s/it][18:56<07:41,20.07s/it][19:14<07:13,19.71s/it][19:35<06:58,19.95s/it][19:56<06:42,20.15s/it][20:15<06:21,20.06s/it][20:34<05:54,19.68s/it][20:54<05:36,19.82s/it][21:14<05:18,19.90s/it][21:35<04:59,20.00s/it][21:55<04:40,20.03s/it][22:15<04:20,20.03s/it][22:35<04:01,20.15s/it][22:56<03:43,20.29s/it][23:16<03:22,20.25s/it][23:36<03:01,20.19s/it][23:57<02:42,20.31s/it][24:18<02:24,20.67s/it][24:38<02:02,20.46s/it][24:58<01:41,20.28s/it][25:18<01:20,20.23s/it][25:39<01:01,20.35s/it][25:59<00:40,20.22s/it][26:18<00:20,20.08s/it][26:31<00:00,17.88s/it][26:31<00:00,20.15s/it][2024/09/20 21:18:17] - square
[2024/09/20 21:18:17] - adv: 0.7302 	
[2024/09/20 21:18:17] - Testing done.

wandb: - 0.005 MB of 0.005 MB uploadedwandb: \ 0.005 MB of 0.005 MB uploadedwandb: | 0.005 MB of 0.005 MB uploadedwandb: / 0.011 MB of 0.017 MB uploaded (0.001 MB deduped)wandb: - 0.034 MB of 0.034 MB uploaded (0.001 MB deduped)wandb: 
wandb: Run history:
wandb:     Nature Acc ‚ñÅ
wandb: autoattack_adv ‚ñÅ
wandb:       cwl2_adv ‚ñÅ
wandb:   deepfool_adv ‚ñÅ
wandb:     eotpgd_adv ‚ñÅ
wandb:       fgsm_adv ‚ñÅ
wandb:     mifgsm_adv ‚ñÅ
wandb:        pgd_adv ‚ñÅ
wandb:      pixel_adv ‚ñÅ
wandb:     square_adv ‚ñÅ
wandb: 
wandb: Run summary:
wandb:     Nature Acc 0.8177
wandb: autoattack_adv 0.5904
wandb:       cwl2_adv 0.8061
wandb:   deepfool_adv 0.7003
wandb:     eotpgd_adv 0.5521
wandb:       fgsm_adv 0.5733
wandb:     mifgsm_adv 0.5502
wandb:        pgd_adv 0.5468
wandb:      pixel_adv 0.7776
wandb:     square_adv 0.7302
wandb: 
wandb: üöÄ View run silver-wood-23 at: https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-heihe/runs/4e07g16v
wandb: ‚≠êÔ∏è View project at: https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-heihe
wandb: Synced 6 W&B file(s), 0 media file(s), 2 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20240920_200349-4e07g16v/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
