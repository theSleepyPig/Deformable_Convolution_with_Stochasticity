nohup: ignoring input
wandb: Currently logged in as: xuanzhu_07 (xuanzhu_07-university-of-sydney). Use `wandb login --relogin` to force relogin
wandb: - Waiting for wandb.init()...wandb: \ Waiting for wandb.init()...wandb: | Waiting for wandb.init()...wandb: / Waiting for wandb.init()...wandb: wandb version 0.18.7 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.16.3
wandb: Run data is saved locally in /home/yxma/hzx/hzx/hzx/rand_defence/wandb/run-20241120_161506-9nifwywi
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run dulcet-planet-7
wandb: ‚≠êÔ∏è View project at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa
wandb: üöÄ View run at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa/runs/9nifwywi
[2024/11/20 16:15:12] - Namespace(batch_size=128, data_dir='~/datasets/CIFAR10/', dataset='cifar10', epochs=200, network='ResNet18', worker=4, lr_schedule='multistep', lr_min=0.0, lr_max=0.1, weight_decay=0.0005, momentum=0.9, none_random_training=True, rand_deform_training=False, randpos_deform_training=True, randpos_multi_deform_training=False, is_n_repeat=False, reNum=5, only_adv_randpos_training=False, rand_path_training=False, epsilon=8, alpha=2, c=0.0001, steps=1000, seed=0, attack_iters=20, restarts=1, save_dir='logs/ResNet18_DeformableConvolution', pretrain='/home/yxma/hzx/hzx/hzx/rand_defence/ckpt/cifar10/ResNet18/ckpt/model_20241119143714.pth', continue_training=False, lb=2048, pos=0, eot=False, hang=False, device=1)
[2024/11/20 16:15:12] - Dataset: cifar10
[2024/11/20 16:15:14] - Evaluating with standard images with random mask...
Process ID: 1238506
Pretrain model path: /home/yxma/hzx/hzx/hzx/rand_defence/ckpt/cifar10/ResNet18/ckpt/model_20241119143714.pth
Does pretrain model path exist? True
Files already downloaded and verified
Files already downloaded and verified
ResNetPartmask5(
  (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layer1): ModuleList(
    (0): RandonBasicBlock047(
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): MaskedConv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer11): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer2): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer3): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer4): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (linear): Linear(in_features=512, out_features=10, bias=True)
  (normalize): NormalizeByChannelMeanStd(mean=tensor([0.4914, 0.4822, 0.4465], device='cuda:1'), std=tensor([0.2471, 0.2435, 0.2616], device='cuda:1'))
)
Different keys:
normalize.mean
normalize.std
Nature:
[2024/11/20 16:15:14] - Evaluating with standard images with random mask...
tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 1., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 1., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 1., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 1., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 1., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 1., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        ...,


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 1., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 1., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 1., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 1., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 1., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 1., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]]], device='cuda:1')
[2024/11/20 16:15:15] - Evaluating with standard images with random mask...
[2024/11/20 16:15:15] - Evaluating with standard images with random mask...
[2024/11/20 16:15:16] - Evaluating with standard images with random mask...
[2024/11/20 16:15:16] - Nature Acc Mean: 0.8677, Std: 0.0008
AA attacking
[00:00<?,?it/s][00:16<21:20,16.42s/it][00:31<20:23,15.89s/it][00:47<20:05,15.87s/it][01:07<21:49,17.46s/it][01:30<23:55,19.40s/it][02:02<28:42,23.59s/it][02:41<34:35,28.83s/it][03:27<40:36,34.32s/it][04:16<45:05,38.65s/it][04:49<42:44,37.17s/it][05:25<41:31,36.64s/it][06:02<41:13,36.91s/it][06:37<39:46,36.16s/it][07:11<38:34,35.61s/it][07:46<37:46,35.41s/it][08:22<37:16,35.50s/it][08:56<36:15,35.10s/it][09:31<35:45,35.18s/it][10:06<35:03,35.06s/it][10:43<34:59,35.59s/it][11:19<34:23,35.58s/it][11:54<33:38,35.41s/it][12:28<32:47,35.13s/it][13:02<31:48,34.71s/it][13:39<32:02,35.60s/it][14:17<32:01,36.25s/it][14:55<31:51,36.75s/it][15:32<31:17,36.81s/it][16:08<30:28,36.57s/it][16:45<29:56,36.66s/it][17:20<28:58,36.22s/it][17:55<28:07,35.91s/it][18:32<27:40,36.10s/it][19:09<27:14,36.33s/it][19:45<26:32,36.19s/it][20:22<26:10,36.53s/it][21:00<25:58,37.10s/it][21:40<25:50,37.82s/it][22:15<24:42,37.07s/it][22:50<23:37,36.35s/it][23:26<23:00,36.33s/it][24:06<22:58,37.25s/it][24:42<22:07,36.87s/it][25:17<21:18,36.53s/it][25:53<20:31,36.22s/it][26:29<19:56,36.27s/it][27:06<19:25,36.42s/it][27:43<18:56,36.67s/it][28:20<18:23,36.77s/it][28:59<18:01,37.31s/it][29:34<17:06,36.65s/it][30:13<16:48,37.35s/it][30:49<15:58,36.88s/it][31:22<14:58,35.96s/it][31:57<14:15,35.66s/it][32:31<13:28,35.14s/it][33:07<12:53,35.16s/it][33:43<12:23,35.42s/it][34:19<11:52,35.61s/it][34:55<11:21,35.89s/it][35:30<10:38,35.48s/it][36:05<10:00,35.31s/it][36:39<09:20,35.01s/it][37:16<08:54,35.66s/it][37:51<08:18,35.57s/it][38:28<07:45,35.81s/it][39:03<07:08,35.68s/it][39:42<06:43,36.66s/it][40:17<06:01,36.17s/it][40:51<05:19,35.52s/it][41:25<04:41,35.14s/it][42:00<04:04,34.95s/it][42:37<03:32,35.48s/it][43:11<02:56,35.20s/it][43:48<02:23,35.81s/it][44:24<01:47,35.86s/it][44:59<01:11,35.58s/it][45:35<00:35,35.58s/it][46:10<00:00,35.44s/it][46:10<00:00,35.07s/it][2024/11/20 17:01:27] - autoattack - Run 79: Accuracy: 0.7154

[00:00<?,?it/s][00:35<45:30,35.01s/it][01:09<44:49,34.93s/it][01:41<42:26,33.51s/it][02:19<43:50,35.08s/it][02:51<42:04,34.11s/it][03:27<42:04,34.58s/it][04:02<41:57,34.96s/it][04:37<41:14,34.85s/it][05:14<41:33,35.63s/it][05:52<41:33,36.14s/it][06:25<40:11,35.47s/it][07:02<39:57,35.79s/it][07:37<38:58,35.42s/it][08:14<38:51,35.87s/it][08:51<38:55,36.49s/it][09:27<37:54,36.11s/it][10:04<37:43,36.51s/it][10:42<37:29,36.88s/it][11:18<36:37,36.63s/it][11:54<35:57,36.57s/it][12:29<34:53,36.09s/it][13:05<34:18,36.11s/it][13:42<33:53,36.32s/it][14:17<32:44,35.71s/it][14:52<32:08,35.71s/it][15:26<31:02,35.14s/it][16:03<30:53,35.65s/it][16:41<30:56,36.40s/it][17:18<30:27,36.55s/it][17:56<30:09,36.94s/it][18:32<29:20,36.67s/it][19:08<28:35,36.51s/it][19:45<28:00,36.53s/it][20:24<27:58,37.29s/it][21:02<27:41,37.76s/it][21:39<26:54,37.55s/it][22:18<26:34,37.97s/it][22:59<26:22,38.61s/it][23:35<25:23,38.08s/it][24:10<24:09,37.17s/it][24:46<23:18,36.81s/it][25:20<22:10,35.96s/it][25:56<21:32,35.91s/it][26:32<20:52,35.77s/it][27:07<20:10,35.61s/it][27:42<19:27,35.38s/it][28:16<18:44,35.14s/it][28:52<18:17,35.39s/it][29:29<17:56,35.87s/it][30:04<17:09,35.49s/it][30:38<16:24,35.16s/it][31:12<15:34,34.62s/it][31:47<15:09,34.96s/it][32:27<15:12,36.51s/it][33:03<14:30,36.27s/it][33:38<13:46,35.95s/it][34:14<13:06,35.75s/it][34:50<12:33,35.90s/it][35:27<12:05,36.26s/it][36:02<11:22,35.91s/it][36:40<10:58,36.56s/it][37:16<10:17,36.34s/it][37:51<09:34,35.88s/it][38:28<09:02,36.19s/it][39:05<08:31,36.52s/it][39:42<07:57,36.76s/it][40:18<07:17,36.47s/it][40:54<06:38,36.20s/it][41:32<06:08,36.82s/it][42:07<05:27,36.37s/it][42:40<04:43,35.41s/it][43:15<04:05,35.09s/it][43:50<03:29,34.97s/it][44:24<02:54,34.81s/it][45:02<02:23,35.91s/it][45:40<01:49,36.36s/it][46:13<01:11,35.53s/it][46:49<00:35,35.69s/it][47:25<00:00,35.52s/it][47:25<00:00,36.01s/it][2024/11/20 17:48:52] - autoattack - Run 79: Accuracy: 0.6977

[00:00<?,?it/s][00:34<44:39,34.36s/it][01:08<44:04,34.35s/it][01:43<43:31,34.36s/it][02:17<42:57,34.37s/it][02:49<41:21,33.54s/it][03:23<40:53,33.61s/it][04:01<41:58,34.98s/it][04:36<41:34,35.13s/it][05:10<40:42,34.89s/it][05:45<40:07,34.90s/it][06:25<41:12,36.36s/it][07:02<40:50,36.57s/it][07:36<39:30,35.92s/it][08:11<38:23,35.43s/it][08:45<37:33,35.22s/it][09:22<37:22,35.59s/it][09:57<36:38,35.45s/it][10:35<36:52,36.28s/it][11:10<35:46,35.78s/it][11:47<35:34,36.18s/it][12:23<34:52,36.08s/it][12:59<34:21,36.17s/it][13:36<34:02,36.48s/it][14:15<34:07,37.22s/it][14:51<33:05,36.78s/it][15:27<32:08,36.38s/it][16:05<32:01,36.96s/it][16:41<31:07,36.61s/it][17:15<30:03,36.06s/it][17:53<29:42,36.38s/it][18:31<29:30,36.88s/it][19:08<28:55,36.92s/it][19:47<28:46,37.53s/it][20:26<28:31,38.03s/it][21:02<27:25,37.40s/it][21:40<26:58,37.63s/it][22:19<26:33,37.93s/it][22:59<26:31,38.82s/it][23:37<25:39,38.49s/it][24:14<24:44,38.06s/it][24:50<23:46,37.53s/it][25:26<22:41,36.80s/it][26:01<21:50,36.41s/it][26:36<21:00,36.01s/it][27:11<20:14,35.71s/it][27:47<19:40,35.76s/it][28:24<19:18,36.19s/it][29:01<18:46,36.34s/it][29:39<18:24,36.82s/it][30:15<17:42,36.62s/it][30:50<16:51,36.11s/it][31:26<16:16,36.17s/it][32:03<15:42,36.27s/it][32:41<15:19,36.80s/it][33:14<14:16,35.70s/it][33:47<13:25,35.02s/it][34:23<12:54,35.22s/it][34:58<12:16,35.07s/it][35:34<11:48,35.44s/it][36:10<11:14,35.49s/it][36:45<10:39,35.54s/it][37:22<10:08,35.78s/it][37:57<09:29,35.57s/it][38:34<08:59,36.00s/it][39:10<08:23,35.97s/it][39:46<07:48,36.01s/it][40:21<07:08,35.68s/it][40:56<06:31,35.56s/it][41:33<05:59,35.90s/it][42:07<05:19,35.49s/it][42:43<04:44,35.55s/it][43:17<04:05,35.06s/it][43:52<03:30,35.16s/it][44:25<02:52,34.57s/it][44:59<02:17,34.39s/it][45:35<01:44,34.72s/it][46:13<01:11,35.72s/it][46:49<00:35,35.80s/it][47:24<00:00,35.73s/it][47:24<00:00,36.01s/it][2024/11/20 18:36:17] - autoattack - Run 79: Accuracy: 0.7077

[00:00<?,?it/s][00:36<47:23,36.46s/it][01:12<46:30,36.24s/it][01:46<44:48,35.38s/it][01:48<27:24,21.93s/it][02:20<31:31,25.56s/it][02:50<33:14,27.33s/it][03:24<35:06,29.26s/it][04:00<37:27,31.66s/it][04:37<38:51,33.30s/it][05:14<39:23,34.26s/it][05:50<39:19,34.70s/it][06:26<39:26,35.32s/it][07:00<38:24,34.91s/it][07:34<37:18,34.44s/it][08:11<37:41,35.33s/it][08:46<36:58,35.22s/it][09:24<37:18,36.11s/it][10:02<37:14,36.64s/it][10:37<36:05,36.09s/it][11:11<34:52,35.47s/it][11:48<34:48,36.01s/it][12:25<34:21,36.17s/it][13:00<33:27,35.84s/it][13:33<32:11,35.13s/it][14:09<31:47,35.33s/it][14:45<31:15,35.39s/it][15:20<30:43,35.45s/it][15:58<30:42,36.14s/it][16:36<30:31,36.64s/it][17:13<30:07,36.88s/it][17:49<29:20,36.68s/it][18:25<28:34,36.48s/it][19:02<28:04,36.63s/it][19:40<27:44,36.98s/it][20:18<27:20,37.29s/it][20:57<26:58,37.63s/it][21:33<26:02,37.20s/it][22:10<25:25,37.21s/it][22:46<24:36,36.92s/it][23:24<24:14,37.30s/it][24:01<23:33,37.20s/it][24:38<22:50,37.04s/it][25:13<21:47,36.33s/it][25:47<20:54,35.85s/it][26:22<20:01,35.34s/it][26:56<19:14,35.00s/it][27:29<18:20,34.39s/it][28:04<17:52,34.59s/it][28:42<17:50,35.68s/it][29:18<17:20,35.87s/it][29:53<16:33,35.48s/it][30:28<15:53,35.30s/it][31:04<15:27,35.66s/it][31:06<10:36,25.45s/it][31:41<11:18,28.27s/it][32:17<11:46,30.70s/it][32:53<11:46,32.10s/it][33:27<11:28,32.78s/it][34:03<11:13,33.68s/it][34:37<10:44,33.92s/it][35:14<10:25,34.77s/it][35:47<09:43,34.35s/it][36:21<09:04,34.06s/it][36:55<08:34,34.29s/it][37:31<08:06,34.78s/it][38:08<07:40,35.44s/it][38:46<07:12,36.06s/it][39:21<06:34,35.85s/it][39:55<05:51,35.19s/it][40:32<05:22,35.80s/it][41:10<04:51,36.49s/it][41:44<04:10,35.79s/it][42:19<03:33,35.57s/it][42:54<02:56,35.35s/it][43:31<02:23,35.88s/it][44:09<01:48,36.26s/it][44:45<01:12,36.30s/it][45:21<00:36,36.10s/it][45:56<00:00,35.95s/it][45:56<00:00,34.89s/it][2024/11/20 19:22:14] - autoattack - Run 79: Accuracy: 0.6879

[00:00<?,?it/s][00:39<51:53,39.92s/it][01:15<48:07,37.50s/it][01:52<47:16,37.32s/it][01:54<28:49,23.06s/it][02:35<36:37,29.70s/it][03:08<37:38,30.94s/it][03:43<38:34,32.14s/it][04:17<38:33,32.58s/it][04:50<38:18,32.84s/it][05:25<38:25,33.41s/it][06:01<38:47,34.22s/it][06:36<38:36,34.57s/it][07:12<38:26,34.95s/it][07:49<38:26,35.48s/it][08:24<37:56,35.56s/it][09:00<37:25,35.64s/it][09:37<37:05,35.90s/it][10:12<36:24,35.82s/it][10:47<35:33,35.57s/it][11:25<35:34,36.18s/it][12:02<35:14,36.46s/it][12:39<34:41,36.51s/it][13:16<34:17,36.74s/it][13:53<33:44,36.81s/it][14:33<33:55,37.70s/it][15:10<33:05,37.47s/it][15:49<32:59,38.06s/it][16:25<31:56,37.58s/it][17:02<31:03,37.27s/it][17:38<30:05,36.84s/it][18:16<29:45,37.19s/it][18:50<28:28,36.36s/it][19:31<28:54,37.71s/it][20:09<28:25,37.91s/it][20:47<27:46,37.88s/it][21:24<26:54,37.55s/it][22:00<25:59,37.13s/it][22:40<25:48,37.78s/it][23:16<24:51,37.28s/it][23:54<24:24,37.56s/it][24:31<23:37,37.31s/it][25:06<22:36,36.66s/it][25:43<22:01,36.70s/it][26:20<21:33,36.97s/it][26:59<21:14,37.50s/it][27:36<20:32,37.34s/it][28:13<19:54,37.32s/it][28:51<19:25,37.59s/it][29:27<18:33,37.13s/it][30:04<17:49,36.89s/it][30:41<17:18,37.08s/it][31:19<16:49,37.40s/it][31:55<15:55,36.76s/it][32:35<15:42,37.71s/it][33:12<15:01,37.58s/it][33:51<14:33,37.98s/it][34:25<13:33,36.96s/it][35:02<12:55,36.94s/it][35:38<12:13,36.67s/it][36:15<11:39,36.83s/it][36:51<10:53,36.30s/it][37:27<10:15,36.21s/it][38:01<09:29,35.58s/it][38:35<08:47,35.17s/it][39:10<08:12,35.19s/it][39:46<07:40,35.44s/it][40:23<07:11,35.98s/it][41:00<06:38,36.24s/it][41:36<06:02,36.24s/it][42:11<05:21,35.77s/it][42:48<04:48,36.06s/it][43:23<04:10,35.79s/it][43:58<03:34,35.67s/it][44:34<02:58,35.79s/it][45:11<02:24,36.00s/it][45:48<01:49,36.46s/it][46:25<01:12,36.44s/it][47:00<00:36,36.09s/it][47:34<00:00,35.55s/it][47:34<00:00,36.14s/it][2024/11/20 20:09:49] - autoattack - Run 79: Accuracy: 0.6949
[2024/11/20 20:09:49] - autoattack Mean: 0.7007, Std: 0.0097
[2024/11/20 20:09:49] - Testing done.

wandb: - 0.005 MB of 0.005 MB uploadedwandb: \ 0.005 MB of 0.005 MB uploadedwandb: | 0.005 MB of 0.032 MB uploadedwandb: / 0.005 MB of 0.032 MB uploadedwandb: - 0.022 MB of 0.032 MB uploadedwandb: \ 0.022 MB of 0.032 MB uploadedwandb: | 0.022 MB of 0.032 MB uploadedwandb: / 0.032 MB of 0.032 MB uploadedwandb: 
wandb: Run history:
wandb:     Nature Acc Mean ‚ñÅ
wandb:      Nature Acc Std ‚ñÅ
wandb: autoattack_mean_adv ‚ñÅ
wandb:  autoattack_std_adv ‚ñÅ
wandb: 
wandb: Run summary:
wandb:     Nature Acc Mean 0.86772
wandb:      Nature Acc Std 0.00075
wandb: autoattack_mean_adv 0.70072
wandb:  autoattack_std_adv 0.00971
wandb: 
wandb: üöÄ View run dulcet-planet-7 at: https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa/runs/9nifwywi
wandb: Ô∏è‚ö° View job at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa/jobs/QXJ0aWZhY3RDb2xsZWN0aW9uOjQ5NzM2MjQ4Mw==/version_details/v0
wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20241120_161506-9nifwywi/logs
