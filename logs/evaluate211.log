nohup: ignoring input
wandb: Currently logged in as: xuanzhu_07 (xuanzhu_07-university-of-sydney). Use `wandb login --relogin` to force relogin
wandb: - Waiting for wandb.init()...wandb: \ Waiting for wandb.init()...wandb: | Waiting for wandb.init()...wandb: / Waiting for wandb.init()...wandb: wandb version 0.18.7 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.16.3
wandb: Run data is saved locally in /home/yxma/hzx/hzx/hzx/rand_defence/wandb/run-20241120_161646-5c0tgm40
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run bright-music-9
wandb: ‚≠êÔ∏è View project at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa
wandb: üöÄ View run at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa/runs/5c0tgm40
[2024/11/20 16:16:52] - Namespace(batch_size=128, data_dir='~/datasets/CIFAR10/', dataset='cifar10', epochs=200, network='ResNet18', worker=4, lr_schedule='multistep', lr_min=0.0, lr_max=0.1, weight_decay=0.0005, momentum=0.9, none_random_training=True, rand_deform_training=False, randpos_deform_training=True, randpos_multi_deform_training=False, is_n_repeat=False, reNum=5, only_adv_randpos_training=False, rand_path_training=False, epsilon=8, alpha=2, c=0.0001, steps=1000, seed=0, attack_iters=20, restarts=1, save_dir='logs/ResNet18_DeformableConvolution', pretrain='/home/yxma/hzx/hzx/hzx/rand_defence/ckpt/cifar10/ResNet18/ckpt/model_20241119151558.pth', continue_training=False, lb=2048, pos=0, eot=False, hang=False, device=1)
[2024/11/20 16:16:52] - Dataset: cifar10
[2024/11/20 16:16:54] - Evaluating with standard images with random mask...
Process ID: 1240478
Pretrain model path: /home/yxma/hzx/hzx/hzx/rand_defence/ckpt/cifar10/ResNet18/ckpt/model_20241119151558.pth
Does pretrain model path exist? True
Files already downloaded and verified
Files already downloaded and verified
ResNetPartmask5(
  (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layer1): ModuleList(
    (0): RandonBasicBlock0411(
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): MaskedConv2d(64, 64, kernel_size=(11, 11), stride=(1, 1), padding=(5, 5), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer11): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer2): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer3): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (layer4): ModuleList(
    (0): BasicBlock(
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): Sequential()
    )
  )
  (linear): Linear(in_features=512, out_features=10, bias=True)
  (normalize): NormalizeByChannelMeanStd(mean=tensor([0.4914, 0.4822, 0.4465], device='cuda:1'), std=tensor([0.2471, 0.2435, 0.2616], device='cuda:1'))
)
Different keys:
normalize.mean
normalize.std
Nature:
[2024/11/20 16:16:54] - Evaluating with standard images with random mask...
tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        ...,


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]],


        [[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]]], device='cuda:1')
[2024/11/20 16:16:55] - Evaluating with standard images with random mask...
[2024/11/20 16:16:56] - Evaluating with standard images with random mask...
[2024/11/20 16:16:56] - Evaluating with standard images with random mask...
[2024/11/20 16:16:57] - Nature Acc Mean: 0.8481, Std: 0.0025
AA attacking
[00:00<?,?it/s][00:34<44:23,34.15s/it][01:17<50:31,39.37s/it][02:04<54:40,43.16s/it][02:46<53:25,42.74s/it][03:21<48:54,39.66s/it][03:57<46:49,38.49s/it][04:33<45:16,37.73s/it][05:08<43:25,36.70s/it][05:42<42:02,36.03s/it][06:17<41:08,35.78s/it][06:52<40:09,35.43s/it][07:26<39:03,34.98s/it][08:01<38:25,34.94s/it][08:35<37:35,34.71s/it][09:11<37:33,35.22s/it][09:47<37:01,35.26s/it][10:21<36:01,34.87s/it][10:55<35:11,34.62s/it][11:29<34:32,34.54s/it][12:06<34:48,35.40s/it][12:44<34:51,36.06s/it][13:22<34:54,36.75s/it][13:58<34:04,36.50s/it][14:34<33:16,36.30s/it][15:11<32:57,36.62s/it][15:47<32:04,36.31s/it][16:23<31:19,36.15s/it][16:59<30:46,36.20s/it][17:35<30:10,36.21s/it][18:12<29:37,36.28s/it][18:49<29:15,36.56s/it][19:28<29:09,37.22s/it][20:07<28:52,37.67s/it][20:41<27:35,36.79s/it][21:16<26:25,36.04s/it][21:52<25:54,36.15s/it][22:30<25:43,36.76s/it][23:06<25:01,36.63s/it][23:42<24:10,36.27s/it][24:17<23:26,36.06s/it][24:53<22:49,36.04s/it][25:30<22:19,36.21s/it][26:07<21:50,36.41s/it][26:44<21:19,36.55s/it][27:22<21:00,37.08s/it][27:56<19:53,36.18s/it][28:35<19:44,37.01s/it][29:11<18:54,36.61s/it][29:45<17:52,35.76s/it][30:20<17:15,35.72s/it][30:55<16:33,35.47s/it][31:31<16:03,35.70s/it][32:07<15:25,35.59s/it][32:44<14:58,35.95s/it][33:20<14:24,36.04s/it][33:54<13:36,35.48s/it][34:29<13:00,35.49s/it][35:04<12:16,35.06s/it][35:41<11:57,35.86s/it][36:17<11:20,35.80s/it][36:53<10:48,36.00s/it][37:28<10:07,35.71s/it][38:08<09:48,36.80s/it][38:42<08:58,35.92s/it][39:15<08:13,35.26s/it][39:49<07:31,34.75s/it][40:23<06:54,34.57s/it][40:59<06:25,35.02s/it][41:34<05:49,34.91s/it][42:10<05:18,35.38s/it][42:46<04:44,35.54s/it][43:21<04:06,35.21s/it][43:56<03:31,35.22s/it][44:31<02:55,35.08s/it][45:06<02:20,35.11s/it][45:41<01:45,35.10s/it][46:14<01:08,34.48s/it][46:51<00:35,35.39s/it][47:23<00:00,34.28s/it][47:23<00:00,35.99s/it][2024/11/20 17:04:20] - autoattack - Run 79: Accuracy: 0.6139

[00:00<?,?it/s][00:35<45:42,35.16s/it][01:10<45:32,35.48s/it][01:45<44:18,34.98s/it][02:22<44:58,35.98s/it][02:59<44:54,36.41s/it][03:34<43:32,35.79s/it][04:11<43:20,36.12s/it][04:45<42:07,35.59s/it][05:22<41:54,35.93s/it][06:00<42:04,36.59s/it][06:36<41:05,36.26s/it][07:13<40:48,36.54s/it][07:50<40:36,36.91s/it][08:27<39:43,36.67s/it][09:03<39:00,36.58s/it][09:38<37:59,36.18s/it][10:14<37:22,36.17s/it][10:51<36:46,36.18s/it][11:25<35:36,35.61s/it][12:01<35:04,35.66s/it][12:35<34:01,35.20s/it][13:12<33:58,35.77s/it][13:50<34:05,36.53s/it][14:27<33:39,36.72s/it][15:05<33:25,37.15s/it][15:41<32:28,36.77s/it][16:18<31:43,36.60s/it][16:54<31:11,36.69s/it][17:34<31:24,37.69s/it][18:13<30:55,37.86s/it][18:50<30:13,37.77s/it][19:30<29:59,38.29s/it][20:09<29:37,38.64s/it][20:45<28:21,37.82s/it][21:19<26:54,36.69s/it][21:54<25:59,36.26s/it][22:28<24:50,35.50s/it][23:04<24:23,35.70s/it][23:40<23:41,35.54s/it][24:15<23:04,35.49s/it][24:51<22:30,35.55s/it][25:26<21:51,35.45s/it][26:03<21:29,35.83s/it][26:40<21:11,36.32s/it][27:14<20:14,35.73s/it][27:49<19:30,35.48s/it][28:23<18:39,34.99s/it][28:59<18:15,35.34s/it][29:38<18:13,36.47s/it][30:14<17:31,36.27s/it][30:49<16:47,35.99s/it][31:25<16:06,35.79s/it][32:01<15:30,35.80s/it][32:37<15:01,36.06s/it][33:12<14:17,35.71s/it][33:50<13:58,36.44s/it][34:26<13:15,36.16s/it][35:00<12:26,35.54s/it][35:36<11:55,35.78s/it][36:13<11:27,36.17s/it][36:50<10:55,36.40s/it][37:26<10:14,36.14s/it][38:01<09:35,35.99s/it][38:39<09:08,36.59s/it][39:15<08:26,36.18s/it][39:48<07:37,35.21s/it][40:22<06:59,34.97s/it][40:57<06:24,34.92s/it][41:31<05:47,34.73s/it][42:09<05:21,35.77s/it][42:47<04:50,36.32s/it][43:20<04:07,35.42s/it][43:56<03:33,35.57s/it][44:31<02:57,35.49s/it][45:06<02:20,35.25s/it][45:40<01:44,34.95s/it][46:15<01:09,34.79s/it][46:49<00:34,34.54s/it][47:21<00:00,33.92s/it][47:21<00:00,35.97s/it][2024/11/20 17:51:42] - autoattack - Run 79: Accuracy: 0.6020

[00:00<?,?it/s][00:34<44:23,34.15s/it][01:11<46:15,36.04s/it][01:46<45:13,35.70s/it][02:20<43:43,34.98s/it][02:55<43:05,34.94s/it][03:35<44:30,36.59s/it][04:12<43:57,36.63s/it][04:46<42:20,35.78s/it][05:20<41:13,35.33s/it][05:55<40:31,35.24s/it][06:31<40:19,35.58s/it][07:06<39:33,35.43s/it][07:44<39:44,36.13s/it][08:19<38:42,35.74s/it][08:56<38:37,36.21s/it][09:33<38:09,36.35s/it][10:10<37:43,36.51s/it][10:47<37:24,36.80s/it][11:27<37:34,37.58s/it][12:03<36:30,37.13s/it][12:39<35:31,36.75s/it][13:17<35:28,37.33s/it][13:53<34:20,36.79s/it][14:28<33:13,36.25s/it][15:06<33:02,36.72s/it][15:44<32:53,37.23s/it][16:22<32:25,37.41s/it][17:01<32:11,37.87s/it][17:40<31:54,38.30s/it][18:16<30:45,37.66s/it][18:54<30:11,37.73s/it][19:33<29:49,38.06s/it][20:13<29:35,38.60s/it][20:50<28:39,38.21s/it][21:26<27:34,37.61s/it][22:02<26:29,36.97s/it][22:38<25:38,36.62s/it][23:14<24:55,36.47s/it][23:50<24:11,36.29s/it][24:25<23:19,35.88s/it][25:00<22:40,35.81s/it][25:38<22:23,36.31s/it][26:15<21:58,36.62s/it][26:53<21:36,37.04s/it][27:30<20:54,36.89s/it][28:04<19:53,36.18s/it][28:41<19:25,36.42s/it][29:18<18:55,36.62s/it][29:56<18:31,37.06s/it][30:29<17:14,35.68s/it][31:02<16:19,35.00s/it][31:37<15:47,35.11s/it][32:12<15:08,34.94s/it][32:49<14:44,35.40s/it][33:24<14:09,35.41s/it][34:00<13:36,35.50s/it][34:36<13:06,35.75s/it][35:11<12:26,35.57s/it][35:48<11:59,35.98s/it][36:23<11:17,35.68s/it][36:59<10:42,35.70s/it][37:33<10:00,35.30s/it][38:08<09:20,35.02s/it][38:44<08:51,35.42s/it][39:18<08:11,35.13s/it][39:54<07:37,35.16s/it][40:27<06:55,34.63s/it][41:02<06:22,34.80s/it][41:35<05:43,34.35s/it][42:09<05:08,34.24s/it][42:45<04:37,34.65s/it][43:23<04:09,35.67s/it][43:59<03:35,35.88s/it][44:35<02:59,35.91s/it][45:12<02:24,36.09s/it][45:48<01:48,36.09s/it][46:23<01:11,35.61s/it][46:55<00:34,34.75s/it][47:27<00:00,33.70s/it][47:27<00:00,36.04s/it][2024/11/20 18:39:09] - autoattack - Run 79: Accuracy: 0.6088

[00:00<?,?it/s][00:33<43:56,33.80s/it][01:10<45:47,35.68s/it][01:48<46:08,36.43s/it][02:25<45:55,36.74s/it][03:01<44:50,36.36s/it][03:38<44:34,36.63s/it][04:12<43:03,35.88s/it][04:46<41:41,35.23s/it][05:23<41:53,35.91s/it][05:59<41:14,35.86s/it][06:37<41:13,36.38s/it][07:13<40:33,36.33s/it][07:49<39:57,36.33s/it][08:24<38:50,35.86s/it][09:02<38:49,36.40s/it][09:37<37:48,36.01s/it][10:11<36:47,35.60s/it][10:46<35:46,35.19s/it][11:21<35:23,35.39s/it][11:57<34:54,35.50s/it][12:33<34:29,35.69s/it][13:11<34:21,36.17s/it][13:48<34:07,36.57s/it][14:25<33:35,36.64s/it][15:00<32:40,36.31s/it][15:37<32:07,36.36s/it][16:15<31:52,36.78s/it][16:53<31:34,37.15s/it][17:31<31:08,37.37s/it][18:09<30:47,37.71s/it][18:45<29:51,37.32s/it][19:22<29:09,37.23s/it][20:00<28:30,37.19s/it][20:37<27:59,37.33s/it][21:14<27:14,37.15s/it][21:51<26:39,37.19s/it][22:27<25:43,36.74s/it][23:02<24:51,36.38s/it][23:38<23:59,35.99s/it][24:12<23:11,35.68s/it][24:46<22:16,35.18s/it][25:22<21:43,35.23s/it][26:01<21:54,36.51s/it][26:37<21:05,36.15s/it][27:11<20:10,35.60s/it][27:47<19:37,35.68s/it][28:24<19:20,36.27s/it][29:01<18:42,36.22s/it][29:37<18:11,36.39s/it][30:13<17:30,36.23s/it][30:49<16:50,36.10s/it][31:26<16:18,36.24s/it][32:02<15:41,36.20s/it][32:39<15:10,36.42s/it][33:12<14:11,35.46s/it][33:48<13:37,35.53s/it][34:23<13:03,35.63s/it][35:00<12:36,36.02s/it][35:37<12:06,36.33s/it][36:14<11:30,36.32s/it][36:48<10:43,35.74s/it][37:23<10:05,35.63s/it][38:02<09:46,36.64s/it][38:38<09:03,36.22s/it][39:12<08:18,35.60s/it][39:46<07:37,35.22s/it][40:22<07:05,35.49s/it][40:58<06:30,35.49s/it][41:35<06:00,36.07s/it][42:11<05:23,35.98s/it][42:46<04:45,35.74s/it][43:25<04:15,36.56s/it][44:02<03:40,36.78s/it][44:39<03:03,36.72s/it][45:20<02:32,38.14s/it][45:57<01:53,37.96s/it][46:33<01:14,37.14s/it][47:07<00:36,36.40s/it][47:39<00:00,35.06s/it][47:39<00:00,36.20s/it][2024/11/20 19:26:49] - autoattack - Run 79: Accuracy: 0.6137

[00:00<?,?it/s][00:35<45:36,35.08s/it][01:10<45:38,35.57s/it][01:47<45:25,35.86s/it][02:23<45:05,36.08s/it][03:00<44:55,36.43s/it][03:36<44:10,36.30s/it][04:14<43:58,36.64s/it][04:49<43:04,36.40s/it][05:26<42:33,36.47s/it][06:01<41:18,35.92s/it][06:37<40:53,36.07s/it][07:15<40:42,36.46s/it][07:50<39:52,36.26s/it][08:28<39:36,36.57s/it][09:05<39:11,36.75s/it][09:45<39:38,37.76s/it][10:23<38:59,37.73s/it][11:03<39:02,38.41s/it][11:38<37:38,37.63s/it][12:15<36:37,37.24s/it][12:51<35:37,36.86s/it][13:28<35:16,37.12s/it][14:03<33:58,36.39s/it][14:42<33:57,37.05s/it][15:22<34:06,37.90s/it][16:00<33:37,38.07s/it][16:37<32:50,37.89s/it][17:13<31:32,37.10s/it][17:51<31:19,37.58s/it][18:28<30:29,37.35s/it][19:06<30:04,37.59s/it][19:44<29:23,37.52s/it][20:19<28:18,36.93s/it][20:55<27:29,36.66s/it][21:33<27:04,36.93s/it][22:13<27:02,37.74s/it][22:50<26:22,37.67s/it][23:26<25:26,37.22s/it][24:04<24:56,37.41s/it][24:40<24:03,37.01s/it][25:16<23:16,36.75s/it][25:52<22:30,36.51s/it][26:31<22:18,37.17s/it][27:07<21:24,36.71s/it][27:45<21:10,37.36s/it][28:23<20:38,37.52s/it][29:03<20:18,38.09s/it][29:37<19:06,37.00s/it][30:14<18:30,37.00s/it][30:50<17:45,36.75s/it][31:27<17:09,36.77s/it][32:02<16:18,36.23s/it][32:38<15:37,36.07s/it][33:12<14:50,35.62s/it][33:46<13:59,34.96s/it][34:21<13:26,35.06s/it][34:56<12:50,35.03s/it][35:31<12:17,35.14s/it][36:09<11:57,35.87s/it][36:44<11:16,35.61s/it][37:19<10:38,35.47s/it][37:54<10:01,35.35s/it][38:30<09:28,35.54s/it][39:05<08:47,35.19s/it][39:39<08:10,35.04s/it][40:16<07:42,35.59s/it][40:52<07:08,35.67s/it][41:28<06:33,35.81s/it][42:03<05:56,35.62s/it][42:37<05:15,35.08s/it][43:09<04:32,34.08s/it][43:37<03:46,32.40s/it][44:07<03:09,31.52s/it][44:36<02:34,30.81s/it][45:06<02:01,30.42s/it][45:32<01:27,29.26s/it][45:52<00:52,26.50s/it][46:11<00:24,24.31s/it][46:30<00:00,22.65s/it][46:30<00:00,35.32s/it][2024/11/20 20:13:20] - autoattack - Run 79: Accuracy: 0.6192
[2024/11/20 20:13:20] - autoattack Mean: 0.6115, Std: 0.0058
[2024/11/20 20:13:20] - Testing done.

wandb: - 0.005 MB of 0.005 MB uploadedwandb: \ 0.005 MB of 0.005 MB uploadedwandb: | 0.005 MB of 0.032 MB uploadedwandb: / 0.027 MB of 0.032 MB uploadedwandb: - 0.027 MB of 0.032 MB uploadedwandb: \ 0.027 MB of 0.032 MB uploadedwandb: | 0.032 MB of 0.032 MB uploadedwandb: 
wandb: Run history:
wandb:     Nature Acc Mean ‚ñÅ
wandb:      Nature Acc Std ‚ñÅ
wandb: autoattack_mean_adv ‚ñÅ
wandb:  autoattack_std_adv ‚ñÅ
wandb: 
wandb: Run summary:
wandb:     Nature Acc Mean 0.84812
wandb:      Nature Acc Std 0.00245
wandb: autoattack_mean_adv 0.61152
wandb:  autoattack_std_adv 0.00579
wandb: 
wandb: üöÄ View run bright-music-9 at: https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa/runs/5c0tgm40
wandb: Ô∏è‚ö° View job at https://wandb.ai/xuanzhu_07-university-of-sydney/-Test-boundary-aa/jobs/QXJ0aWZhY3RDb2xsZWN0aW9uOjQ5NzM2MjQ4Mw==/version_details/v0
wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20241120_161646-5c0tgm40/logs
